(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    131362,       2775]
NotebookOptionsPosition[    119514,       2454]
NotebookOutlinePosition[    119868,       2470]
CellTagsIndexPosition[    119825,       2467]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"y", "=", "2009"}], ";"}]], "Input",
 CellChangeTimes->{{3.6391065349785137`*^9, 3.639106535849642*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dowJonesMember", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<MMM\>\"", ",", "\"\<AXP\>\"", ",", "\"\<AAPL\>\"", ",", "\"\<BA\>\"",
      ",", "\"\<CAT\>\"", ",", "\"\<CVX\>\"", ",", "\"\<CSCO\>\"", ",", 
     "\"\<KO\>\"", ",", "\"\<DD\>\"", ",", "\"\<XOM\>\"", ",", "\"\<GE\>\"", 
     ",", "\"\<GS\>\"", ",", "\"\<HD\>\"", ",", "\"\<INTC\>\"", ",", 
     "\"\<IBM\>\"", ",", "\"\<JNJ\>\"", ",", "\"\<JPM\>\"", ",", 
     "\"\<MCD\>\"", ",", "\"\<MRK\>\"", ",", "\"\<MSFT\>\"", ",", 
     "\"\<NKE\>\"", ",", "\"\<PFE\>\"", ",", "\"\<PG\>\"", ",", "\"\<TRV\>\"",
      ",", "\"\<UNH\>\"", ",", "\"\<UTX\>\"", ",", "\"\<VZ\>\"", ",", 
     "\"\<WMT\>\"", ",", "\"\<DIS\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639104857092492*^9, 3.6391048590669117`*^9}, {
  3.639104934444605*^9, 3.639104936449861*^9}, {3.639235057694326*^9, 
  3.639235084444458*^9}, {3.6392351893154173`*^9, 3.639235189971636*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stocksSets", "=", 
   RowBox[{"splitup", "[", 
    RowBox[{"dowJonesMember", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "/@", "stocksSets"}]}], "Input",
 CellChangeTimes->{{3.6391049736529093`*^9, 3.639105015198889*^9}, {
  3.639235069524949*^9, 3.639235072995842*^9}, {3.639235250164323*^9, 
  3.639235250860478*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6", ",", "6", ",", "6", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6391050156010447`*^9, {3.639235061111492*^9, 3.639235085592987*^9}, {
   3.6392352391648197`*^9, 3.639235251381441*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainingSets", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Drop", "[", 
       RowBox[{"stocksSets", ",", 
        RowBox[{"{", "#", "}"}]}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "stocksSets", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testSets", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"stocksSets", "[", 
      RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "stocksSets", "]"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6391050875045033`*^9, 3.639105113458333*^9}, {
  3.639105157784919*^9, 3.6391052321845713`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingSet", "=", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"2005", ",", "2012"}], "]"}], "/@", "dowJonesMember"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.639235564736127*^9, 3.639235573788328*^9}, {
  3.639236092392858*^9, 3.63923610464993*^9}, {3.639236319788821*^9, 
  3.639236319933522*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingSets", "=", 
   RowBox[{"splitup", "[", 
    RowBox[{"trainingSet", ",", "5"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6392366973101797`*^9, 3.639236708506074*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingSets", "=", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"n", ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Drop", "[", 
         RowBox[{"trainingSets", ",", 
          RowBox[{"{", "n", "}"}]}], "]"}], ",", "2"}], "]"}]}], "]"}], "/@", 
    
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "trainingSets", "]"}], "]"}]}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.639236779056406*^9, 3.6392368784676313`*^9}, {
  3.639237051810824*^9, 3.639237052846084*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", "trainingSets"}]], "Input",
 CellChangeTimes->{{3.639236880971985*^9, 3.639236898388235*^9}, {
  3.63923699967276*^9, 3.6392370660438623`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"42288", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40526", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40526", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40526", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40526", ",", "64"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6392368956319532`*^9, 3.639236898863967*^9}, {
  3.639237001709601*^9, 3.639237066449408*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[CapitalPhi]s", ",", "As", ",", "bs"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"\[CapitalPhi]", "/@", "trainingSets"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.6392369843311987`*^9, 3.639236990234022*^9}, {
  3.639237111432496*^9, 3.6392371594854794`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingReturns", "=", 
   RowBox[{
    RowBox[{"r", "[", 
     RowBox[{"2005", ",", "2012"}], "]"}], "/@", "dowJonesMember"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6392379497043552`*^9, 3.639237973039874*^9}, 
   3.639238312253311*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingReturns", "=", 
   RowBox[{"splitup", "[", 
    RowBox[{"testReturns", ",", "5"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639238009602285*^9, 3.639238018897406*^9}, 
   3.6392383136448917`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingReturns", "=", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"n", ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{"Drop", "[", 
        RowBox[{"trainingReturns", ",", 
         RowBox[{"{", "n", "}"}]}], "]"}], "]"}]}], "]"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "trainingReturns", "]"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.639238028727952*^9, 3.639238076217759*^9}, {
  3.639238314757091*^9, 3.63923832075628*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", "trainingReturns"}]], "Input",
 CellChangeTimes->{{3.639238079352363*^9, 3.639238086094242*^9}, 
   3.639238334158002*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "42288", "}"}], ",", 
   RowBox[{"{", "40526", "}"}], ",", 
   RowBox[{"{", "40526", "}"}], ",", 
   RowBox[{"{", "40526", "}"}], ",", 
   RowBox[{"{", "40526", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.639238086510352*^9, 3.6392383347582197`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"qs", "=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"findQ", "[", 
       RowBox[{"0", ",", "1", ",", "#1", ",", "#2"}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[CapitalPhi]s", ",", "trainingReturns"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.639239505157853*^9, 3.639239545412121*^9}, 
   3.639239650333282*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "/@", "qs"}]], "Input",
 CellChangeTimes->{{3.639239558487644*^9, 3.63923956039216*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9999999894229521`", ",", "0.9999999825783003`", ",", 
   "0.999999985687963`", ",", "0.9999999819139889`", ",", 
   "0.9999999816341306`"}], "}"}]], "Output",
 CellChangeTimes->{3.6392395608142157`*^9, 3.639239664626359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"qs", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.63923956795815*^9, 3.6392395772706347`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.016666666666666666`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw1kn0s1HEcxw8xiYvIQ8zKhOzESbiie59nhyMjO5KpI4tm45RRc3/UDG0Y
odF5KnnIeRhpyVPG1TymLFnLYqGkqU5Uc6vm47f99ttrr8/7/f3+fr/vofPJ
oXGqDAaD9+/+/5yPiVRhS5Vca0E6m9k9yWVsX5hbGnMRfhwh1oSL9lrP1+xB
Yl3suRv305vbRWyA8A+JeWmykb5tNkYZ82Zc2rkJYjPUFBULmCkVNH8Qm30i
+yyVcvIWOFSVpDiiPk5sCUmo6qwzv5TYCuq8MIFIbkJsgwOG9WXdWi3UZ4sr
L/TU+vRrybMQq21rJzavIT6Kxacp1Y61/cQOyEnTymeV9xCzYShPX1I0dVKf
I5Tx5usPR4eJj8GWLTQw0cigeSe0FASvxIoekz8Onewhz1SVPPLOGM10l/fq
1JJ3wctLQVYhpveJXRHhFMXx1G4n5uCVptrFwLlKyp9AhrTQUXxtZ/8nkaT7
baye1UTsBtXoDaMGzs77uiPye52f4b5m4lOY+s0y4K0mUD8XbcnSdxU5A+SB
OFnMtFZd8TZLgJHc3tWJhFDyPOhtTl2+VUbrS3hQTjPESeX91OeB7Od/eisU
ydss8cB6/pN5o4FWynti8fPg6YHhevKeyHVxe8S0ayfvBdMLlYytiiryXhCH
fJpi7aZ5hjfkJV0RtfN0XiTeEPNkUigayftgOUzezrXIJe+DFFPHnquaHdTv
i/3GlcH+fSXkfcFWjodVLxRS3g9rDrz4qMI28n5w5tgvXF/vpLw/BCWv2XxF
B3l/WHpYmS8yb5DnA9I5hvJOC30fPpwmixr4dnXkA5CqX9PctPN/JQFg/4hc
mmkdovUDwTEt2CwG9UkC0bgcNfaltJV8EHo3lgeUulmUD8Kzw8KqUU4j9Qtg
Fr135YHNbfIChAsdlt7M3KN8MFzPZhf/sqfzIQnGroa3iRbvd85TCESz6Wdk
ImKEYEvDWiU5M4P7F2AhMnI=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 65.}, {-0.24507014710444674`, 0.26141695815133165`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6392395776491127`*^9, 
  3.639239666230329*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
GgmycdvFHOprfEablzN2/bfRx6u20bLPvqL77AvEXzpI38Y/tNTqpr27dtLD
0kaHHlSsY5dFsVOvTIe4uBQSxz+dybeI9l2/fp2ePHniCN5gG6cAHTrExSjf
wXqdCoepMBVOBDm+neinq+fPU2T4ddoSfJDtWSC8jbb6r6OlAaFUVtdLz3Ni
KGjvCRqacnyrOwsehKo8eL+I8qENE6uI1+wMkyO9lJWZTb0jxg9PCD1Fe9gm
jY+4QkcuWhqPM2JYgebUtClQOC8PGuPg+xt2qJ6OFqpvaafR4QGKDrtMy77c
QQ+ysmjlirW0/7LBcXbkZRa6N3BuRK0E2NrABcyB/qFRdaCAecQuUMmiiZ09
V3KlrNVXTGBCejCKmZsUky+aemSLIRWlPI1IL4hW1dhHw911tIcZa9WmrcwQ
x6hvhKgo7grt/OamgZe347Fdmykup0p5WlsQpBfWOZ5GzhuZrO0XshxPw2lB
avHQrQLqYWETwJbsyp2n6LP1h6myvpum+pspeNMGKqmXKlwqS79NG3ZfpMBz
2eLEI23lPUkHxYPyPeVpSH3JyydW0nBbNe3YHEjpuY/Jf/tx2nDgNvWxpki6
epiO30wykAy08Dub6JFHQSE/9auACEkQ/MhiEnsRtgTiJmyivDadrSGOc3J4
F/X1ObaubTJFmTirqWwNWkkjh+4hNxuCABgVKnW+yjuWZI8zYmjtFx/TFxv3
UvsAfjFG148G0a8/2U3bT8XR0d2b6VzYA19t4L0nbPJKwtNPfQ/wMoJBo+OT
ViW/zgzdQdtXL6drMQiwdtClY0F0+FIEVT/JpNVrA6iioYUKUsNYwuyhenZ1
4Feo5w33CEUYMHresGvNTw4h/6372RnopiTeFO8uC6Brsfm0Zu1q2n8yjFqb
amnnpvV0J0XPXS+QkA1iytIUQc3LxWLIwkVBzAwfFFFg+Sjc8tXL26OSoQWO
0aRkj+U2IkfKzyx8BP2tXYI7qspPos8/fIc+W3uMaluGqbM2n1Z95U8F1Y1U
kZdAa1YFUE3nsPIzgkbYv6XVvtLmgzceieZAYNc4EL8ntjrSEuejn9AE89Lh
IBhQkfT59hv0qLiCzfohOr9/Gx27EkPtrY10bNsGOnD1Pi3bnYjwkRIPaQZE
7FB5oaysNYC5pc2y487s3UJnbybQ4ZBc+u0nK5nF86m6IJlWrtnGu7aVcuJu
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"q", "=", 
   RowBox[{"findQ", "[", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"trainingSets", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"trainingReturns", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.639238241158928*^9, 3.6392382423318768`*^9}, {
  3.639238272671152*^9, 3.639238282857237*^9}, {3.639238340808082*^9, 
  3.63923835332618*^9}, {3.639239465647441*^9, 3.639239468414558*^9}}],

Cell[BoxData["\<\">>  \\nCalling SDPT3 4.0: 66 variables, 1 equality \
constraints\\n------------------------------------------------------------\\n\
\\n num. of constraints =  1\\n dim. of socp   var  = 65,   num. of socp blk  \
=  1\\n dim. of linear var  =  \
1\\n*******************************************************************\\n   \
SDPT3: Infeasible path-following \
algorithms\\n*****************************************************************\
**\\n version  predcorr  gam  expon  scale_data\\n    NT      1      0.000   \
1        0    \\nit pstep dstep pinfeas dinfeas  gap      prim-obj      \
dual-obj    \
cputime\\n-------------------------------------------------------------------\
\\n 0|0.000|0.000|8.5e+00|1.4e+00|4.4e+09| 0.000000e+00  0.000000e+00| \
0:0:00| chol  1  1 \\n 1|0.384|0.473|5.4e+00|7.5e-01|1.6e+09|-3.344148e+09 \
-6.796502e+05| 0:0:00| chol  1  1 \\n 2|0.001|1.000|5.3e+00|2.6e-11|3.0e+11| \
7.861020e+08 -2.530740e+10| 0:0:00| chol  1  1 \\n \
3|1.000|1.000|3.9e-08|2.6e-12|2.1e+10| 6.397125e+07 -2.115618e+10| 0:0:00| \
chol  1  1 \\n 4|1.000|0.959|6.8e-09|2.6e-09|8.7e+08| 5.694656e+07 \
-8.169203e+08| 0:0:00| chol  1  1 \\n \
5|1.000|0.492|1.4e-10|2.7e-09|2.8e+08|-2.781966e+08 -5.588639e+08| 0:0:00| \
chol  1  1 \\n 6|0.911|1.000|2.8e-11|2.9e-11|2.5e+07|-5.257738e+08 \
-5.506755e+08| 0:0:00| chol  1  1 \\n \
7|0.986|0.986|2.2e-11|6.0e-12|3.4e+05|-5.400035e+08 -5.403466e+08| 0:0:00| \
chol  1  1 \\n 8|0.989|0.989|7.8e-12|4.5e-12|3.8e+03|-5.402004e+08 \
-5.402042e+08| 0:0:00| chol  1  1 \\n \
9|0.989|0.989|2.6e-12|1.6e-12|4.2e+01|-5.402025e+08 -5.402026e+08| 0:0:00| \
chol  1  1 \\n10|0.989|0.989|2.9e-14|1.0e-12|4.6e-01|-5.402026e+08 \
-5.402026e+08| 0:0:00|\\n  stop: max(relative gap, infeasibilities) < \
1.49e-08\\n-------------------------------------------------------------------\
\\n number of iterations   = 10\\n primal objective value = \
-5.40202565e+08\\n dual   objective value = -5.40202566e+08\\n gap := \
trace(XZ)       = 4.58e-01\\n relative gap           = 4.24e-10\\n actual \
relative gap    = 4.24e-10\\n rel. primal infeas (scaled problem)   = \
2.85e-14\\n rel. dual     \\\"        \\\"       \\\"      = 1.02e-12\\n rel. \
primal infeas (unscaled problem) = 0.00e+00\\n rel. dual     \\\"        \\\" \
      \\\"      = 0.00e+00\\n norm(X), norm(y), norm(Z) = 1.4e+00, 5.4e+08, \
9.4e+08\\n norm(A), norm(b), norm(C) = 2.4e+00, 2.0e+00, 5.4e+08\\n Total CPU \
time (secs)  = 0.11  \\n CPU time per iteration = 0.01  \\n termination code  \
     =  0\\n DIMACS: 2.9e-14  0.0e+00  1.0e-12  0.0e+00  4.2e-10  \
4.2e-10\\n-------------------------------------------------------------------\
\\n \\n------------------------------------------------------------\\nStatus: \
Solved\\nOptimal value (cvx_optval): +5.40203e+08\\n \\n\"\>"], "Print",
 CellChangeTimes->{3.639239429326437*^9, 3.639239470090768*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Norm", "[", "q", "]"}]], "Input",
 CellChangeTimes->{{3.6392394726426973`*^9, 3.639239473551491*^9}}],

Cell[BoxData["0.9999999995085451`"], "Output",
 CellChangeTimes->{3.639239473891418*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["q"], "Input",
 CellChangeTimes->{3.639239475635316*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "2.0698360558217235`*^-8", ",", "1.806576097281257`*^-8", ",", 
   "1.537878304933279`*^-8", ",", "8.440689533274294`*^-10", ",", 
   RowBox[{"-", "6.179246140507006`*^-10"}], ",", "2.3464816605759265`*^-9", 
   ",", 
   RowBox[{"-", "2.047995168014294`*^-10"}], ",", 
   RowBox[{"-", "1.0271353414662036`*^-8"}], ",", 
   RowBox[{"-", "8.27795052281154`*^-11"}], ",", "1.0535040259084139`*^-9", 
   ",", "3.9849678595132804`*^-9", ",", 
   RowBox[{"-", "7.236363784064373`*^-10"}], ",", 
   RowBox[{"-", "7.367866299434151`*^-10"}], ",", 
   RowBox[{"-", "5.194399169647595`*^-9"}], ",", 
   RowBox[{"-", "4.477506246639189`*^-9"}], ",", "5.141912661048718`*^-9", 
   ",", "9.590192178013913`*^-9", ",", "7.475873438306504`*^-10", ",", 
   "5.6254794480000036`*^-9", ",", "4.035242368018357`*^-10", ",", 
   "2.8339877761443574`*^-9", ",", "3.050662067793376`*^-9", ",", 
   "4.463963063244102`*^-9", ",", 
   RowBox[{"-", "4.0769411206457304`*^-10"}], ",", 
   RowBox[{"-", "6.453980225426572`*^-10"}], ",", 
   RowBox[{"-", "1.4589725308212438`*^-9"}], ",", 
   RowBox[{"-", "8.514960104028191`*^-10"}], ",", 
   RowBox[{"-", "1.6869754298515215`*^-9"}], ",", "1.2146495291487752`*^-9", 
   ",", 
   RowBox[{"-", "5.492023776577442`*^-9"}], ",", "1.1748296971374147`*^-10", 
   ",", "8.950134272726483`*^-10", ",", 
   RowBox[{"-", "7.058854321014256`*^-10"}], ",", "7.292357627401068`*^-9", 
   ",", "1.2675341846336853`*^-9", ",", 
   RowBox[{"-", "2.054698310528344`*^-9"}], ",", "3.4077058697675982`*^-9", 
   ",", 
   RowBox[{"-", "2.318915627420456`*^-9"}], ",", "2.643694250448402`*^-9", 
   ",", "3.339208932507041`*^-9", ",", "2.3226143645570456`*^-9", ",", 
   "3.5496839494021934`*^-9", ",", "1.6762577366165976`*^-9", ",", 
   RowBox[{"-", "2.6750807425734803`*^-9"}], ",", "2.1497757374432654`*^-9", 
   ",", "1.9241799467659218`*^-9", ",", "4.378784172235023`*^-9", ",", 
   RowBox[{"-", "3.0275885205543776`*^-9"}], ",", "5.013715424027857`*^-9", 
   ",", "6.174598367135828`*^-10", ",", 
   RowBox[{"-", "1.8735008627301207`*^-9"}], ",", 
   RowBox[{"-", "1.088676557622017`*^-9"}], ",", "4.3940733215234965`*^-9", 
   ",", "9.188542137794408`*^-9", ",", "6.027313868680287`*^-10", ",", 
   "4.173242055454502`*^-9", ",", "1.3050674010433867`*^-9", ",", 
   "9.08416827219673`*^-7", ",", "1.0387386037358459`*^-8", ",", 
   "1.159853559660398`*^-8", ",", "1.0818641336082666`*^-6", ",", 
   "1.094534708383406`*^-6", ",", "1.1043989336583638`*^-6", ",", 
   "0.9999999995063376`"}], "}"}]], "Output",
 CellChangeTimes->{3.639239475962034*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "/@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"trainingSets", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"trainingReturns", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.639238923361438*^9, 3.6392389357340612`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"42288", ",", "64"}], "}"}], ",", 
   RowBox[{"{", "42288", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6392382427949944`*^9, 3.639238355522339*^9, 
  3.6392388570801897`*^9, 3.639238936161804*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"magic", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.639239035479828*^9, 3.63923903672521*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"17", ",", "24", ",", "1", ",", "8", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"23", ",", "5", ",", "7", ",", "14", ",", "16"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "6", ",", "13", ",", "20", ",", "22"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "12", ",", "19", ",", "21", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "18", ",", "25", ",", "2", ",", "9"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.639239048938814*^9, 3.63923909542975*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.639237287505692*^9, 3.6392372898371058`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainingSet", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.639236252670919*^9, 3.639236256365163*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"29", ",", "1762", ",", "64"}], "}"}]], "Output",
 CellChangeTimes->{3.639236256760315*^9, 3.639236512512229*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Drop", "[", 
      RowBox[{"trainingSet", ",", "#"}], "]"}], ",", "1"}], "]"}], "&"}], "/@", 
  RowBox[{"Range", "["}]}]], "Input",
 CellChangeTimes->{{3.639236547937893*^9, 3.639236613274828*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "training", ",", "A", ",", "b", ",", "index", ",", "testFeatures", ",", 
       "normalizedTestFeatures", ",", "trainingReturns", ",", "testReturns"}],
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"index", "=", 
       RowBox[{"ToString", "[", "#", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"training", ",", "A", ",", "b"}], "}"}], "=", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{
         RowBox[{"x", "[", "y", "]"}], "/@", 
         RowBox[{"trainingSets", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"exportFeatures", "[", 
       RowBox[{"training", ",", 
        RowBox[{
        "\"\<features_fold\>\"", "<>", "index", "<>", "\"\<.csv\>\""}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"testFeatures", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "y", "]"}], "/@", 
          RowBox[{"testSets", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"normalizedTestFeatures", "=", 
       RowBox[{"\[CapitalPhi]", "[", 
        RowBox[{"testFeatures", ",", "A", ",", "b"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"exportFeatures", "[", 
       RowBox[{"normalizedTestFeatures", ",", 
        RowBox[{
        "\"\<testFeatures_fold\>\"", "<>", "index", "<>", "\"\<.csv\>\""}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"trainingReturns", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"r", "[", "y", "]"}], "/@", 
          RowBox[{"trainingSets", "[", 
           RowBox[{"[", "#", "]"}], "]"}]}], ",", "1"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"exportReturns", "[", 
       RowBox[{"trainingReturns", ",", 
        RowBox[{
        "\"\<returns_fold\>\"", "<>", "index", "<>", "\"\<.csv\>\""}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"testReturns", "=", 
       RowBox[{"Transpose", "[", 
        RowBox[{
         RowBox[{"r", "[", "y", "]"}], "/@", 
         RowBox[{"testSets", "[", 
          RowBox[{"[", "#", "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"exportFeatures", "[", 
       RowBox[{"testReturns", ",", 
        RowBox[{
        "\"\<testReturns_fold\>\"", "<>", "index", "<>", "\"\<.csv\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}], "&"}], "/@", 
  RowBox[{"Range", "[", 
   RowBox[{"2", ",", "5"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData["\<\"Calling financial features feeds for MMM\"\>"], "Print",
 CellChangeTimes->{3.639109003316833*^9}],

Cell[BoxData["\<\"Calling financial features feeds for AXP\"\>"], "Print",
 CellChangeTimes->{3.639109007400082*^9}],

Cell[BoxData["\<\"Calling financial features feeds for AAPL\"\>"], "Print",
 CellChangeTimes->{3.639109011375739*^9}],

Cell[BoxData["\<\"Calling financial features feeds for BA\"\>"], "Print",
 CellChangeTimes->{3.639109015376459*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CAT\"\>"], "Print",
 CellChangeTimes->{3.6391090192661657`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for GE\"\>"], "Print",
 CellChangeTimes->{3.6391090236293364`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for GS\"\>"], "Print",
 CellChangeTimes->{3.639109027565979*^9}],

Cell[BoxData["\<\"Calling financial features feeds for HD\"\>"], "Print",
 CellChangeTimes->{3.639109031486187*^9}],

Cell[BoxData["\<\"Calling financial features feeds for INTC\"\>"], "Print",
 CellChangeTimes->{3.639109035373775*^9}],

Cell[BoxData["\<\"Calling financial features feeds for IBM\"\>"], "Print",
 CellChangeTimes->{3.639109039304449*^9}],

Cell[BoxData["\<\"Calling financial features feeds for JNJ\"\>"], "Print",
 CellChangeTimes->{3.639109043300997*^9}],

Cell[BoxData["\<\"Calling financial features feeds for JPM\"\>"], "Print",
 CellChangeTimes->{3.639109047259284*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MCD\"\>"], "Print",
 CellChangeTimes->{3.639109051217853*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MRK\"\>"], "Print",
 CellChangeTimes->{3.6391090554551907`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MSFT\"\>"], "Print",
 CellChangeTimes->{3.639109059380116*^9}],

Cell[BoxData["\<\"Calling financial features feeds for NKE\"\>"], "Print",
 CellChangeTimes->{3.639109063443288*^9}],

Cell[BoxData["\<\"Calling financial features feeds for PFE\"\>"], "Print",
 CellChangeTimes->{3.639109067350152*^9}],

Cell[BoxData["\<\"Calling financial features feeds for PG\"\>"], "Print",
 CellChangeTimes->{3.639109071535016*^9}],

Cell[BoxData["\<\"Calling financial features feeds for TRV\"\>"], "Print",
 CellChangeTimes->{3.639109075559988*^9}],

Cell[BoxData["\<\"Calling financial features feeds for UNH\"\>"], "Print",
 CellChangeTimes->{3.639109079343557*^9}],

Cell[BoxData["\<\"Calling financial features feeds for UTX\"\>"], "Print",
 CellChangeTimes->{3.639109083170396*^9}],

Cell[BoxData["\<\"Calling financial features feeds for VZ\"\>"], "Print",
 CellChangeTimes->{3.639109087202668*^9}],

Cell[BoxData["\<\"Calling financial features feeds for V\"\>"], "Print",
 CellChangeTimes->{3.639109091130571*^9}],

Cell[BoxData["\<\"Calling financial features feeds for WMT\"\>"], "Print",
 CellChangeTimes->{3.639109094878684*^9}],

Cell[BoxData["\<\"Calling financial features feeds for DIS\"\>"], "Print",
 CellChangeTimes->{3.639109099356502*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CVX\"\>"], "Print",
 CellChangeTimes->{3.639109136580145*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CSCO\"\>"], "Print",
 CellChangeTimes->{3.63910914045686*^9}],

Cell[BoxData["\<\"Calling financial features feeds for KO\"\>"], "Print",
 CellChangeTimes->{3.639109144305902*^9}],

Cell[BoxData["\<\"Calling financial features feeds for DD\"\>"], "Print",
 CellChangeTimes->{3.639109148267292*^9}],

Cell[BoxData["\<\"Calling financial features feeds for XOM\"\>"], "Print",
 CellChangeTimes->{3.639109152255637*^9}],

Cell[BoxData["\<\"Calling returns values for MMM\"\>"], "Print",
 CellChangeTimes->{3.6391091628205547`*^9}],

Cell[BoxData["\<\"Calling returns values for AXP\"\>"], "Print",
 CellChangeTimes->{3.639109163365822*^9}],

Cell[BoxData["\<\"Calling returns values for AAPL\"\>"], "Print",
 CellChangeTimes->{3.639109163871046*^9}],

Cell[BoxData["\<\"Calling returns values for BA\"\>"], "Print",
 CellChangeTimes->{3.639109164417787*^9}],

Cell[BoxData["\<\"Calling returns values for CAT\"\>"], "Print",
 CellChangeTimes->{3.639109164944559*^9}],

Cell[BoxData["\<\"Calling returns values for GE\"\>"], "Print",
 CellChangeTimes->{3.639109165512602*^9}],

Cell[BoxData["\<\"Calling returns values for GS\"\>"], "Print",
 CellChangeTimes->{3.6391091660385647`*^9}],

Cell[BoxData["\<\"Calling returns values for HD\"\>"], "Print",
 CellChangeTimes->{3.6391091665438757`*^9}],

Cell[BoxData["\<\"Calling returns values for INTC\"\>"], "Print",
 CellChangeTimes->{3.639109167058749*^9}],

Cell[BoxData["\<\"Calling returns values for IBM\"\>"], "Print",
 CellChangeTimes->{3.6391091675716743`*^9}],

Cell[BoxData["\<\"Calling returns values for JNJ\"\>"], "Print",
 CellChangeTimes->{3.639109168082646*^9}],

Cell[BoxData["\<\"Calling returns values for JPM\"\>"], "Print",
 CellChangeTimes->{3.639109168642878*^9}],

Cell[BoxData["\<\"Calling returns values for MCD\"\>"], "Print",
 CellChangeTimes->{3.639109169164577*^9}],

Cell[BoxData["\<\"Calling returns values for MRK\"\>"], "Print",
 CellChangeTimes->{3.6391091696633253`*^9}],

Cell[BoxData["\<\"Calling returns values for MSFT\"\>"], "Print",
 CellChangeTimes->{3.639109170149469*^9}],

Cell[BoxData["\<\"Calling returns values for NKE\"\>"], "Print",
 CellChangeTimes->{3.639109170670588*^9}],

Cell[BoxData["\<\"Calling returns values for PFE\"\>"], "Print",
 CellChangeTimes->{3.639109171209675*^9}],

Cell[BoxData["\<\"Calling returns values for PG\"\>"], "Print",
 CellChangeTimes->{3.6391091716928463`*^9}],

Cell[BoxData["\<\"Calling returns values for TRV\"\>"], "Print",
 CellChangeTimes->{3.639109172354303*^9}],

Cell[BoxData["\<\"Calling returns values for UNH\"\>"], "Print",
 CellChangeTimes->{3.63910917284647*^9}],

Cell[BoxData["\<\"Calling returns values for UTX\"\>"], "Print",
 CellChangeTimes->{3.6391091733267937`*^9}],

Cell[BoxData["\<\"Calling returns values for VZ\"\>"], "Print",
 CellChangeTimes->{3.63910917388923*^9}],

Cell[BoxData["\<\"Calling returns values for V\"\>"], "Print",
 CellChangeTimes->{3.6391091743914413`*^9}],

Cell[BoxData["\<\"Calling returns values for WMT\"\>"], "Print",
 CellChangeTimes->{3.639109174868272*^9}],

Cell[BoxData["\<\"Calling returns values for DIS\"\>"], "Print",
 CellChangeTimes->{3.63910917540837*^9}],

Cell[BoxData["\<\"Calling returns values for CVX\"\>"], "Print",
 CellChangeTimes->{3.6391091766277323`*^9}],

Cell[BoxData["\<\"Calling returns values for CSCO\"\>"], "Print",
 CellChangeTimes->{3.639109177159397*^9}],

Cell[BoxData["\<\"Calling returns values for KO\"\>"], "Print",
 CellChangeTimes->{3.6391091776677933`*^9}],

Cell[BoxData["\<\"Calling returns values for DD\"\>"], "Print",
 CellChangeTimes->{3.639109178164216*^9}],

Cell[BoxData["\<\"Calling returns values for XOM\"\>"], "Print",
 CellChangeTimes->{3.639109178722518*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MMM\"\>"], "Print",
 CellChangeTimes->{3.63910917945009*^9}],

Cell[BoxData["\<\"Calling financial features feeds for AXP\"\>"], "Print",
 CellChangeTimes->{3.639109183314159*^9}],

Cell[BoxData["\<\"Calling financial features feeds for AAPL\"\>"], "Print",
 CellChangeTimes->{3.63910918722451*^9}],

Cell[BoxData["\<\"Calling financial features feeds for BA\"\>"], "Print",
 CellChangeTimes->{3.639109191109229*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CAT\"\>"], "Print",
 CellChangeTimes->{3.639109195109312*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CVX\"\>"], "Print",
 CellChangeTimes->{3.6391091990365477`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CSCO\"\>"], "Print",
 CellChangeTimes->{3.63910920292277*^9}],

Cell[BoxData["\<\"Calling financial features feeds for KO\"\>"], "Print",
 CellChangeTimes->{3.63910920958121*^9}],

Cell[BoxData["\<\"Calling financial features feeds for DD\"\>"], "Print",
 CellChangeTimes->{3.6391092137275248`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for XOM\"\>"], "Print",
 CellChangeTimes->{3.639109217732254*^9}],

Cell[BoxData["\<\"Calling financial features feeds for JNJ\"\>"], "Print",
 CellChangeTimes->{3.639109221640232*^9}],

Cell[BoxData["\<\"Calling financial features feeds for JPM\"\>"], "Print",
 CellChangeTimes->{3.639109225725665*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MCD\"\>"], "Print",
 CellChangeTimes->{3.6391092301540003`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MRK\"\>"], "Print",
 CellChangeTimes->{3.639109234116252*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MSFT\"\>"], "Print",
 CellChangeTimes->{3.639109238168476*^9}],

Cell[BoxData["\<\"Calling financial features feeds for NKE\"\>"], "Print",
 CellChangeTimes->{3.639109242237678*^9}],

Cell[BoxData["\<\"Calling financial features feeds for PFE\"\>"], "Print",
 CellChangeTimes->{3.639109246187611*^9}],

Cell[BoxData["\<\"Calling financial features feeds for PG\"\>"], "Print",
 CellChangeTimes->{3.639109250134583*^9}],

Cell[BoxData["\<\"Calling financial features feeds for TRV\"\>"], "Print",
 CellChangeTimes->{3.639109254100505*^9}],

Cell[BoxData["\<\"Calling financial features feeds for UNH\"\>"], "Print",
 CellChangeTimes->{3.639109258137369*^9}],

Cell[BoxData["\<\"Calling financial features feeds for UTX\"\>"], "Print",
 CellChangeTimes->{3.63910926203795*^9}],

Cell[BoxData["\<\"Calling financial features feeds for VZ\"\>"], "Print",
 CellChangeTimes->{3.639109266079023*^9}],

Cell[BoxData["\<\"Calling financial features feeds for V\"\>"], "Print",
 CellChangeTimes->{3.639109269989711*^9}],

Cell[BoxData["\<\"Calling financial features feeds for WMT\"\>"], "Print",
 CellChangeTimes->{3.639109273763441*^9}],

Cell[BoxData["\<\"Calling financial features feeds for DIS\"\>"], "Print",
 CellChangeTimes->{3.6391092777593412`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for GE\"\>"], "Print",
 CellChangeTimes->{3.639109314999905*^9}],

Cell[BoxData["\<\"Calling financial features feeds for GS\"\>"], "Print",
 CellChangeTimes->{3.639109318891251*^9}],

Cell[BoxData["\<\"Calling financial features feeds for HD\"\>"], "Print",
 CellChangeTimes->{3.639109322727592*^9}],

Cell[BoxData["\<\"Calling financial features feeds for INTC\"\>"], "Print",
 CellChangeTimes->{3.639109326527293*^9}],

Cell[BoxData["\<\"Calling financial features feeds for IBM\"\>"], "Print",
 CellChangeTimes->{3.6391093304158916`*^9}],

Cell[BoxData["\<\"Calling returns values for MMM\"\>"], "Print",
 CellChangeTimes->{3.639109340991275*^9}],

Cell[BoxData["\<\"Calling returns values for AXP\"\>"], "Print",
 CellChangeTimes->{3.639109341525361*^9}],

Cell[BoxData["\<\"Calling returns values for AAPL\"\>"], "Print",
 CellChangeTimes->{3.6391093420345783`*^9}],

Cell[BoxData["\<\"Calling returns values for BA\"\>"], "Print",
 CellChangeTimes->{3.639109342537011*^9}],

Cell[BoxData["\<\"Calling returns values for CAT\"\>"], "Print",
 CellChangeTimes->{3.639109343077612*^9}],

Cell[BoxData["\<\"Calling returns values for CVX\"\>"], "Print",
 CellChangeTimes->{3.639109343540249*^9}],

Cell[BoxData["\<\"Calling returns values for CSCO\"\>"], "Print",
 CellChangeTimes->{3.639109344041336*^9}],

Cell[BoxData["\<\"Calling returns values for KO\"\>"], "Print",
 CellChangeTimes->{3.639109344580626*^9}],

Cell[BoxData["\<\"Calling returns values for DD\"\>"], "Print",
 CellChangeTimes->{3.639109345074972*^9}],

Cell[BoxData["\<\"Calling returns values for XOM\"\>"], "Print",
 CellChangeTimes->{3.639109345846258*^9}],

Cell[BoxData["\<\"Calling returns values for JNJ\"\>"], "Print",
 CellChangeTimes->{3.639109346103451*^9}],

Cell[BoxData["\<\"Calling returns values for JPM\"\>"], "Print",
 CellChangeTimes->{3.639109346728664*^9}],

Cell[BoxData["\<\"Calling returns values for MCD\"\>"], "Print",
 CellChangeTimes->{3.639109347214397*^9}],

Cell[BoxData["\<\"Calling returns values for MRK\"\>"], "Print",
 CellChangeTimes->{3.639109347685299*^9}],

Cell[BoxData["\<\"Calling returns values for MSFT\"\>"], "Print",
 CellChangeTimes->{3.6391093482513523`*^9}],

Cell[BoxData["\<\"Calling returns values for NKE\"\>"], "Print",
 CellChangeTimes->{3.639109348737577*^9}],

Cell[BoxData["\<\"Calling returns values for PFE\"\>"], "Print",
 CellChangeTimes->{3.639109349228508*^9}],

Cell[BoxData["\<\"Calling returns values for PG\"\>"], "Print",
 CellChangeTimes->{3.639109349728303*^9}],

Cell[BoxData["\<\"Calling returns values for TRV\"\>"], "Print",
 CellChangeTimes->{3.6391093502237263`*^9}],

Cell[BoxData["\<\"Calling returns values for UNH\"\>"], "Print",
 CellChangeTimes->{3.639109350705426*^9}],

Cell[BoxData["\<\"Calling returns values for UTX\"\>"], "Print",
 CellChangeTimes->{3.639109351227537*^9}],

Cell[BoxData["\<\"Calling returns values for VZ\"\>"], "Print",
 CellChangeTimes->{3.639109352180625*^9}],

Cell[BoxData["\<\"Calling returns values for V\"\>"], "Print",
 CellChangeTimes->{3.639109352659465*^9}],

Cell[BoxData["\<\"Calling returns values for WMT\"\>"], "Print",
 CellChangeTimes->{3.639109353114544*^9}],

Cell[BoxData["\<\"Calling returns values for DIS\"\>"], "Print",
 CellChangeTimes->{3.639109353634225*^9}],

Cell[BoxData["\<\"Calling returns values for GE\"\>"], "Print",
 CellChangeTimes->{3.639109354851822*^9}],

Cell[BoxData["\<\"Calling returns values for GS\"\>"], "Print",
 CellChangeTimes->{3.639109355527823*^9}],

Cell[BoxData["\<\"Calling returns values for HD\"\>"], "Print",
 CellChangeTimes->{3.6391093560098257`*^9}],

Cell[BoxData["\<\"Calling returns values for INTC\"\>"], "Print",
 CellChangeTimes->{3.6391093564828568`*^9}],

Cell[BoxData["\<\"Calling returns values for IBM\"\>"], "Print",
 CellChangeTimes->{3.639109356951037*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MMM\"\>"], "Print",
 CellChangeTimes->{3.6391093577012997`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for AXP\"\>"], "Print",
 CellChangeTimes->{3.6391093618045483`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for AAPL\"\>"], "Print",
 CellChangeTimes->{3.639109365628583*^9}],

Cell[BoxData["\<\"Calling financial features feeds for BA\"\>"], "Print",
 CellChangeTimes->{3.639109369421658*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CAT\"\>"], "Print",
 CellChangeTimes->{3.639109373296123*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CVX\"\>"], "Print",
 CellChangeTimes->{3.639109377115684*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CSCO\"\>"], "Print",
 CellChangeTimes->{3.639109380998748*^9}],

Cell[BoxData["\<\"Calling financial features feeds for KO\"\>"], "Print",
 CellChangeTimes->{3.639109384920479*^9}],

Cell[BoxData["\<\"Calling financial features feeds for DD\"\>"], "Print",
 CellChangeTimes->{3.639109389045834*^9}],

Cell[BoxData["\<\"Calling financial features feeds for XOM\"\>"], "Print",
 CellChangeTimes->{3.639109393082139*^9}],

Cell[BoxData["\<\"Calling financial features feeds for GE\"\>"], "Print",
 CellChangeTimes->{3.6391093970927067`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for GS\"\>"], "Print",
 CellChangeTimes->{3.639109401026163*^9}],

Cell[BoxData["\<\"Calling financial features feeds for HD\"\>"], "Print",
 CellChangeTimes->{3.63910940492835*^9}],

Cell[BoxData["\<\"Calling financial features feeds for INTC\"\>"], "Print",
 CellChangeTimes->{3.6391094087928667`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for IBM\"\>"], "Print",
 CellChangeTimes->{3.639109412712677*^9}],

Cell[BoxData["\<\"Calling financial features feeds for NKE\"\>"], "Print",
 CellChangeTimes->{3.639109416693617*^9}],

Cell[BoxData["\<\"Calling financial features feeds for PFE\"\>"], "Print",
 CellChangeTimes->{3.639109420616438*^9}],

Cell[BoxData["\<\"Calling financial features feeds for PG\"\>"], "Print",
 CellChangeTimes->{3.639109424502928*^9}],

Cell[BoxData["\<\"Calling financial features feeds for TRV\"\>"], "Print",
 CellChangeTimes->{3.639109428403714*^9}],

Cell[BoxData["\<\"Calling financial features feeds for UNH\"\>"], "Print",
 CellChangeTimes->{3.639109432324718*^9}],

Cell[BoxData["\<\"Calling financial features feeds for UTX\"\>"], "Print",
 CellChangeTimes->{3.6391094362395573`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for VZ\"\>"], "Print",
 CellChangeTimes->{3.639109440228093*^9}],

Cell[BoxData["\<\"Calling financial features feeds for V\"\>"], "Print",
 CellChangeTimes->{3.639109444158039*^9}],

Cell[BoxData["\<\"Calling financial features feeds for WMT\"\>"], "Print",
 CellChangeTimes->{3.639109447959259*^9}],

Cell[BoxData["\<\"Calling financial features feeds for DIS\"\>"], "Print",
 CellChangeTimes->{3.639109451889469*^9}],

Cell[BoxData["\<\"Calling financial features feeds for JNJ\"\>"], "Print",
 CellChangeTimes->{3.639109489823957*^9}],

Cell[BoxData["\<\"Calling financial features feeds for JPM\"\>"], "Print",
 CellChangeTimes->{3.6391094935963907`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MCD\"\>"], "Print",
 CellChangeTimes->{3.639109497497019*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MRK\"\>"], "Print",
 CellChangeTimes->{3.639109501491172*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MSFT\"\>"], "Print",
 CellChangeTimes->{3.6391095054204493`*^9}],

Cell[BoxData["\<\"Calling returns values for MMM\"\>"], "Print",
 CellChangeTimes->{3.639109516018613*^9}],

Cell[BoxData["\<\"Calling returns values for AXP\"\>"], "Print",
 CellChangeTimes->{3.639109516538752*^9}],

Cell[BoxData["\<\"Calling returns values for AAPL\"\>"], "Print",
 CellChangeTimes->{3.63910951702503*^9}],

Cell[BoxData["\<\"Calling returns values for BA\"\>"], "Print",
 CellChangeTimes->{3.6391095175260563`*^9}],

Cell[BoxData["\<\"Calling returns values for CAT\"\>"], "Print",
 CellChangeTimes->{3.639109518058013*^9}],

Cell[BoxData["\<\"Calling returns values for CVX\"\>"], "Print",
 CellChangeTimes->{3.639109518598999*^9}],

Cell[BoxData["\<\"Calling returns values for CSCO\"\>"], "Print",
 CellChangeTimes->{3.639109519115411*^9}],

Cell[BoxData["\<\"Calling returns values for KO\"\>"], "Print",
 CellChangeTimes->{3.639109519558563*^9}],

Cell[BoxData["\<\"Calling returns values for DD\"\>"], "Print",
 CellChangeTimes->{3.639109520031034*^9}],

Cell[BoxData["\<\"Calling returns values for XOM\"\>"], "Print",
 CellChangeTimes->{3.639109520492271*^9}],

Cell[BoxData["\<\"Calling returns values for GE\"\>"], "Print",
 CellChangeTimes->{3.6391095209873867`*^9}],

Cell[BoxData["\<\"Calling returns values for GS\"\>"], "Print",
 CellChangeTimes->{3.639109521461866*^9}],

Cell[BoxData["\<\"Calling returns values for HD\"\>"], "Print",
 CellChangeTimes->{3.639109521925601*^9}],

Cell[BoxData["\<\"Calling returns values for INTC\"\>"], "Print",
 CellChangeTimes->{3.639109522379594*^9}],

Cell[BoxData["\<\"Calling returns values for IBM\"\>"], "Print",
 CellChangeTimes->{3.639109522870762*^9}],

Cell[BoxData["\<\"Calling returns values for NKE\"\>"], "Print",
 CellChangeTimes->{3.63910952339699*^9}],

Cell[BoxData["\<\"Calling returns values for PFE\"\>"], "Print",
 CellChangeTimes->{3.639109523877778*^9}],

Cell[BoxData["\<\"Calling returns values for PG\"\>"], "Print",
 CellChangeTimes->{3.639109524400908*^9}],

Cell[BoxData["\<\"Calling returns values for TRV\"\>"], "Print",
 CellChangeTimes->{3.639109524941041*^9}],

Cell[BoxData["\<\"Calling returns values for UNH\"\>"], "Print",
 CellChangeTimes->{3.6391095254372873`*^9}],

Cell[BoxData["\<\"Calling returns values for UTX\"\>"], "Print",
 CellChangeTimes->{3.639109525884218*^9}],

Cell[BoxData["\<\"Calling returns values for VZ\"\>"], "Print",
 CellChangeTimes->{3.639109526372773*^9}],

Cell[BoxData["\<\"Calling returns values for V\"\>"], "Print",
 CellChangeTimes->{3.639109526890547*^9}],

Cell[BoxData["\<\"Calling returns values for WMT\"\>"], "Print",
 CellChangeTimes->{3.639109527366927*^9}],

Cell[BoxData["\<\"Calling returns values for DIS\"\>"], "Print",
 CellChangeTimes->{3.639109527838008*^9}],

Cell[BoxData["\<\"Calling returns values for JNJ\"\>"], "Print",
 CellChangeTimes->{3.6391095290235653`*^9}],

Cell[BoxData["\<\"Calling returns values for JPM\"\>"], "Print",
 CellChangeTimes->{3.63910952951989*^9}],

Cell[BoxData["\<\"Calling returns values for MCD\"\>"], "Print",
 CellChangeTimes->{3.639109529986484*^9}],

Cell[BoxData["\<\"Calling returns values for MRK\"\>"], "Print",
 CellChangeTimes->{3.639109530487608*^9}],

Cell[BoxData["\<\"Calling returns values for MSFT\"\>"], "Print",
 CellChangeTimes->{3.6391095309800663`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MMM\"\>"], "Print",
 CellChangeTimes->{3.639109531724883*^9}],

Cell[BoxData["\<\"Calling financial features feeds for AXP\"\>"], "Print",
 CellChangeTimes->{3.639109535569722*^9}],

Cell[BoxData["\<\"Calling financial features feeds for AAPL\"\>"], "Print",
 CellChangeTimes->{3.6391095397296877`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for BA\"\>"], "Print",
 CellChangeTimes->{3.639109543772278*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CAT\"\>"], "Print",
 CellChangeTimes->{3.639109547630225*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CVX\"\>"], "Print",
 CellChangeTimes->{3.639109551527091*^9}],

Cell[BoxData["\<\"Calling financial features feeds for CSCO\"\>"], "Print",
 CellChangeTimes->{3.6391095558964043`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for KO\"\>"], "Print",
 CellChangeTimes->{3.6391095598383636`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for DD\"\>"], "Print",
 CellChangeTimes->{3.639109563775836*^9}],

Cell[BoxData["\<\"Calling financial features feeds for XOM\"\>"], "Print",
 CellChangeTimes->{3.6391095675944366`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for GE\"\>"], "Print",
 CellChangeTimes->{3.639109571426325*^9}],

Cell[BoxData["\<\"Calling financial features feeds for GS\"\>"], "Print",
 CellChangeTimes->{3.639109575248445*^9}],

Cell[BoxData["\<\"Calling financial features feeds for HD\"\>"], "Print",
 CellChangeTimes->{3.6391095795048037`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for INTC\"\>"], "Print",
 CellChangeTimes->{3.639109583308692*^9}],

Cell[BoxData["\<\"Calling financial features feeds for IBM\"\>"], "Print",
 CellChangeTimes->{3.639109587211666*^9}],

Cell[BoxData["\<\"Calling financial features feeds for JNJ\"\>"], "Print",
 CellChangeTimes->{3.639109591102829*^9}],

Cell[BoxData["\<\"Calling financial features feeds for JPM\"\>"], "Print",
 CellChangeTimes->{3.639109595355579*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MCD\"\>"], "Print",
 CellChangeTimes->{3.639109599274531*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MRK\"\>"], "Print",
 CellChangeTimes->{3.639109603055848*^9}],

Cell[BoxData["\<\"Calling financial features feeds for MSFT\"\>"], "Print",
 CellChangeTimes->{3.6391096069159107`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for UTX\"\>"], "Print",
 CellChangeTimes->{3.639109610834594*^9}],

Cell[BoxData["\<\"Calling financial features feeds for VZ\"\>"], "Print",
 CellChangeTimes->{3.6391096146616898`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for V\"\>"], "Print",
 CellChangeTimes->{3.639109618509777*^9}],

Cell[BoxData["\<\"Calling financial features feeds for WMT\"\>"], "Print",
 CellChangeTimes->{3.6391096224284286`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for DIS\"\>"], "Print",
 CellChangeTimes->{3.639109626556766*^9}],

Cell[BoxData["\<\"Calling financial features feeds for NKE\"\>"], "Print",
 CellChangeTimes->{3.6391096656638803`*^9}],

Cell[BoxData["\<\"Calling financial features feeds for PFE\"\>"], "Print",
 CellChangeTimes->{3.639109669689035*^9}],

Cell[BoxData["\<\"Calling financial features feeds for PG\"\>"], "Print",
 CellChangeTimes->{3.639109673642177*^9}],

Cell[BoxData["\<\"Calling financial features feeds for TRV\"\>"], "Print",
 CellChangeTimes->{3.639109677647428*^9}],

Cell[BoxData["\<\"Calling financial features feeds for UNH\"\>"], "Print",
 CellChangeTimes->{3.6391096817264233`*^9}],

Cell[BoxData["\<\"Calling returns values for MMM\"\>"], "Print",
 CellChangeTimes->{3.639109692980792*^9}],

Cell[BoxData["\<\"Calling returns values for AXP\"\>"], "Print",
 CellChangeTimes->{3.639109693477943*^9}],

Cell[BoxData["\<\"Calling returns values for AAPL\"\>"], "Print",
 CellChangeTimes->{3.639109693978307*^9}],

Cell[BoxData["\<\"Calling returns values for BA\"\>"], "Print",
 CellChangeTimes->{3.6391096944808483`*^9}],

Cell[BoxData["\<\"Calling returns values for CAT\"\>"], "Print",
 CellChangeTimes->{3.639109694970399*^9}],

Cell[BoxData["\<\"Calling returns values for CVX\"\>"], "Print",
 CellChangeTimes->{3.639109695492188*^9}],

Cell[BoxData["\<\"Calling returns values for CSCO\"\>"], "Print",
 CellChangeTimes->{3.639109696330882*^9}],

Cell[BoxData["\<\"Calling returns values for KO\"\>"], "Print",
 CellChangeTimes->{3.6391096969894342`*^9}],

Cell[BoxData["\<\"Calling returns values for DD\"\>"], "Print",
 CellChangeTimes->{3.639109697463784*^9}],

Cell[BoxData["\<\"Calling returns values for XOM\"\>"], "Print",
 CellChangeTimes->{3.639109697941997*^9}],

Cell[BoxData["\<\"Calling returns values for GE\"\>"], "Print",
 CellChangeTimes->{3.6391096984252768`*^9}],

Cell[BoxData["\<\"Calling returns values for GS\"\>"], "Print",
 CellChangeTimes->{3.639109698928542*^9}],

Cell[BoxData["\<\"Calling returns values for HD\"\>"], "Print",
 CellChangeTimes->{3.6391096994016457`*^9}],

Cell[BoxData["\<\"Calling returns values for INTC\"\>"], "Print",
 CellChangeTimes->{3.639109699915303*^9}],

Cell[BoxData["\<\"Calling returns values for IBM\"\>"], "Print",
 CellChangeTimes->{3.639109700393062*^9}],

Cell[BoxData["\<\"Calling returns values for JNJ\"\>"], "Print",
 CellChangeTimes->{3.639109700911364*^9}],

Cell[BoxData["\<\"Calling returns values for JPM\"\>"], "Print",
 CellChangeTimes->{3.639109701372726*^9}],

Cell[BoxData["\<\"Calling returns values for MCD\"\>"], "Print",
 CellChangeTimes->{3.639109701863276*^9}],

Cell[BoxData["\<\"Calling returns values for MRK\"\>"], "Print",
 CellChangeTimes->{3.639109702312805*^9}],

Cell[BoxData["\<\"Calling returns values for MSFT\"\>"], "Print",
 CellChangeTimes->{3.63910970277264*^9}],

Cell[BoxData["\<\"Calling returns values for UTX\"\>"], "Print",
 CellChangeTimes->{3.639109703270525*^9}],

Cell[BoxData["\<\"Calling returns values for VZ\"\>"], "Print",
 CellChangeTimes->{3.639109703798725*^9}],

Cell[BoxData["\<\"Calling returns values for V\"\>"], "Print",
 CellChangeTimes->{3.639109704275186*^9}],

Cell[BoxData["\<\"Calling returns values for WMT\"\>"], "Print",
 CellChangeTimes->{3.639109705085368*^9}],

Cell[BoxData["\<\"Calling returns values for DIS\"\>"], "Print",
 CellChangeTimes->{3.639109705564517*^9}],

Cell[BoxData["\<\"Calling returns values for NKE\"\>"], "Print",
 CellChangeTimes->{3.63910970671914*^9}],

Cell[BoxData["\<\"Calling returns values for PFE\"\>"], "Print",
 CellChangeTimes->{3.639109707189863*^9}],

Cell[BoxData["\<\"Calling returns values for PG\"\>"], "Print",
 CellChangeTimes->{3.63910970774559*^9}],

Cell[BoxData["\<\"Calling returns values for TRV\"\>"], "Print",
 CellChangeTimes->{3.639109708235833*^9}],

Cell[BoxData["\<\"Calling returns values for UNH\"\>"], "Print",
 CellChangeTimes->{3.63910970871461*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"/Users/TBM/Desktop/ProjetC/Data/testReturns_fold2.csv\"\>", 
   ",", "\<\"/Users/TBM/Desktop/ProjetC/Data/testReturns_fold3.csv\"\>", 
   ",", "\<\"/Users/TBM/Desktop/ProjetC/Data/testReturns_fold4.csv\"\>", 
   ",", "\<\"/Users/TBM/Desktop/ProjetC/Data/testReturns_fold5.csv\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.639109709407195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FinancialData", "[", 
  RowBox[{"\"\<AAPL\>\"", ",", "\"\<Volatility50Day\>\"", ",", 
   RowBox[{"{", "2010", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63923535365491*^9, 3.639235388827845*^9}, {
  3.639235441063951*^9, 3.639235444153811*^9}, {3.639235641279582*^9, 
  3.639235709940679*^9}, {3.639235779165613*^9, 3.639235779337035*^9}, {
  3.639235810944236*^9, 3.639235814666526*^9}, {3.639235849426756*^9, 
  3.639235864234329*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.26466363430017076`", ",", "0.2668029763661671`", ",", 
   "0.266313034836229`", ",", "0.2684913654678563`", ",", 
   "0.26154649509690225`", ",", "0.2542942482941493`", ",", 
   "0.2518419041395667`", ",", "0.23420774020045598`", ",", 
   "0.235742199117348`", ",", "0.2361561260181551`", ",", 
   "0.23911775096323853`", ",", "0.2550199545404891`", ",", 
   "0.2581291921576416`", ",", "0.24920925562156204`", ",", 
   "0.27465166455624`", ",", "0.28141974642337053`", ",", 
   "0.2828214767270873`", ",", "0.28229540597866537`", ",", 
   "0.2972187186665736`", ",", "0.30826964977296323`", ",", 
   "0.31010023197540737`", ",", "0.3046965558912675`", ",", 
   "0.3072133683336426`", ",", "0.31049262529190425`", ",", 
   "0.31316967760486675`", ",", "0.31346129002966894`", ",", 
   "0.3121037968907402`", ",", "0.31224178232309974`", ",", 
   "0.3132160757222371`", ",", "0.31365033725626507`", ",", 
   "0.31537498971367434`", ",", "0.3131591000355215`", ",", 
   "0.30826881362265823`", ",", "0.3086516946981003`", ",", 
   "0.29504300981681747`", ",", "0.29717823857171094`", ",", 
   "0.2991870916604976`", ",", "0.29840482323621936`", ",", 
   "0.2976692541816822`", ",", "0.30105002603592634`", ",", 
   "0.2982688147315053`", ",", "0.29575844037806714`", ",", 
   "0.29452288429472256`", ",", "0.30565562450203315`", ",", 
   "0.305255404179856`", ",", "0.29851698103358`", ",", "0.2978763440094366`",
    ",", "0.2963294168259086`", ",", "0.29543377775476654`", ",", 
   "0.29678545993859834`", ",", "0.2949836146708263`", ",", 
   "0.29502982373603787`", ",", "0.29242218519493335`", ",", 
   "0.29361485105155716`", ",", "0.2942467358464831`", ",", 
   "0.2951699271555682`", ",", "0.2936504988726527`", ",", 
   "0.29398421239758704`", ",", "0.29599871597700417`", ",", 
   "0.2929100124169617`", ",", "0.2788490208393211`", ",", 
   "0.2762446994155861`", ",", "0.2725298290766364`", ",", 
   "0.2433422214344684`", ",", "0.23759957188170136`", ",", 
   "0.23633110868872262`", ",", "0.23625485890441955`", ",", 
   "0.2120730906550414`", ",", "0.18986540482352685`", ",", 
   "0.1889172686628682`", ",", "0.18997126773519143`", ",", 
   "0.1888100565064261`", ",", "0.16496664538321787`", ",", 
   "0.16305276084845322`", ",", "0.16441432964920866`", ",", 
   "0.20387824806933208`", ",", "0.20811973258017843`", ",", 
   "0.20762912959148921`", ",", "0.2091120138429892`", ",", 
   "0.221865262645971`", ",", "0.22138246355685398`", ",", 
   "0.226441519058707`", ",", "0.23795898266669244`", ",", 
   "0.23872387183243146`", ",", "0.24638359291385462`", ",", 
   "0.24725600093723515`", ",", "0.26637034666700427`", ",", 
   "0.28614419024650034`", ",", "0.3262138718510051`", ",", 
   "0.32630462877510485`", ",", "0.32861073472237406`", ",", 
   "0.33135645710368594`", ",", "0.32532293127099327`", ",", 
   "0.3252921879133609`", ",", "0.3242908544176446`", ",", 
   "0.32672521634960777`", ",", "0.3426571631125093`", ",", 
   "0.34496756360758474`", ",", "0.34555582240426336`", ",", 
   "0.3460559197416271`", ",", "0.34627807105514186`", ",", 
   "0.3554706655233017`", ",", "0.3550506012881122`", ",", 
   "0.3556660999121582`", ",", "0.3550139312795646`", ",", 
   "0.35526511559185164`", ",", "0.36041175639285206`", ",", 
   "0.3619210120216526`", ",", "0.36221385611983176`", ",", 
   "0.3656978594203185`", ",", "0.37139472506568344`", ",", 
   "0.3721234203585067`", ",", "0.371540246962449`", ",", 
   "0.374177955816481`", ",", "0.37913914136005256`", ",", 
   "0.3804752378178097`", ",", "0.3805059665873967`", ",", 
   "0.3824295635068154`", ",", "0.3832640535500186`", ",", 
   "0.38354266191833924`", ",", "0.3832385146417991`", ",", 
   "0.38353904219418367`", ",", "0.38361071129785357`", ",", 
   "0.39794339413267527`", ",", "0.37752731703490866`", ",", 
   "0.3726758094158531`", ",", "0.3705632789613156`", ",", 
   "0.37101448699950884`", ",", "0.3773865542366977`", ",", 
   "0.37739983846281916`", ",", "0.3725671878953952`", ",", 
   "0.36751673295835546`", ",", "0.3675691065838804`", ",", 
   "0.3619063008173242`", ",", "0.36133303316515497`", ",", 
   "0.35053317405678813`", ",", "0.3384700274267919`", ",", 
   "0.2988570673787179`", ",", "0.29874966566762806`", ",", 
   "0.29773120230241573`", ",", "0.296044047840129`", ",", 
   "0.29322579259508724`", ",", "0.29602071817484293`", ",", 
   "0.29685271289484055`", ",", "0.29557006305096756`", ",", 
   "0.2774228430297101`", ",", "0.2770183591269175`", ",", 
   "0.2743559512940893`", ",", "0.27387402431525065`", ",", 
   "0.27391426836208416`", ",", "0.26158557377859004`", ",", 
   "0.2601354574447938`", ",", "0.25866172286829514`", ",", 
   "0.26969508584118723`", ",", "0.27017824166241733`", ",", 
   "0.2640727270722149`", ",", "0.26060781479716066`", ",", 
   "0.2632171272689157`", ",", "0.2568500796559633`", ",", 
   "0.24976261426411872`", ",", "0.24822880088383656`", ",", 
   "0.2504654909751374`", ",", "0.2508495421092787`", ",", 
   "0.24307210390543457`", ",", "0.2397887235263239`", ",", 
   "0.2392763677279349`", ",", "0.23810653702949316`", ",", 
   "0.23557732486717867`", ",", "0.2454925595280043`", ",", 
   "0.2459551792980844`", ",", "0.2529049082803571`", ",", 
   "0.2525327086610309`", ",", "0.2337858008384038`", ",", 
   "0.22969616574377955`", ",", "0.2276806113358997`", ",", 
   "0.22875249092658648`", ",", "0.22849345011080516`", ",", 
   "0.21147553885338893`", ",", "0.21730140717774124`", ",", 
   "0.21743160268107486`", ",", "0.2244798350089229`", ",", 
   "0.2177746169146606`", ",", "0.21931557942568555`", ",", 
   "0.21860333260519887`", ",", "0.21849194430912613`", ",", 
   "0.21390086006341782`", ",", "0.21173473716005428`", ",", 
   "0.2111838283827242`", ",", "0.21056484392709546`", ",", 
   "0.21099319641016895`", ",", "0.2137194560321288`", ",", 
   "0.22475587492489074`", ",", "0.2225182067626467`", ",", 
   "0.22050887774204606`", ",", "0.22245905678795336`", ",", 
   "0.21977941498880887`", ",", "0.22050965316529414`", ",", 
   "0.22057331313723907`", ",", "0.2200958875351804`", ",", 
   "0.23473082827951558`", ",", "0.2351185048127713`", ",", 
   "0.2438069483989296`", ",", "0.22574730218087066`", ",", 
   "0.2263631274454457`", ",", "0.22512966656490657`", ",", 
   "0.22389411957164296`", ",", "0.2224515436413573`", ",", 
   "0.2227180465920087`", ",", "0.2212545608566813`", ",", 
   "0.22478634583709603`", ",", "0.2207635212251471`", ",", 
   "0.21239299645847687`", ",", "0.21220005078486853`", ",", 
   "0.21067453699425648`", ",", "0.21173362170830382`", ",", 
   "0.21169712652149514`", ",", "0.21382454257763306`", ",", 
   "0.20653200786545658`", ",", "0.2075024964745956`", ",", 
   "0.21413368483337403`", ",", "0.21404794061196034`", ",", 
   "0.21617768776715612`", ",", "0.21661321931302668`", ",", 
   "0.22294192485038752`", ",", "0.2224636787358934`", ",", 
   "0.22640616424629867`", ",", "0.22977198410936522`", ",", 
   "0.22816380675570014`", ",", "0.22764150369641534`", ",", 
   "0.2200765251193255`", ",", "0.22493843117097098`", ",", 
   "0.22581510724340514`", ",", "0.2259111861138455`", ",", 
   "0.2249676551844939`", ",", "0.22509944970772736`", ",", 
   "0.222517775736131`", ",", "0.2230248318653626`", ",", 
   "0.2208162143962574`", ",", "0.22025733748440038`", ",", 
   "0.21696109252402862`", ",", "0.20328444605907756`", ",", 
   "0.20331038703927323`", ",", "0.20326367905632967`", ",", 
   "0.20066645307058553`", ",", "0.20071214597233`", ",", 
   "0.19991244142972103`", ",", "0.1997560488522293`", ",", 
   "0.19985518241456776`", ",", "0.1785190918665083`", ",", 
   "0.17716787027359918`", ",", "0.1652855938545413`", ",", 
   "0.1657546686500793`", ",", "0.16577399933806733`", ",", 
   "0.17129553259757402`", ",", "0.1713747068572085`", ",", 
   "0.1717847863380176`", ",", "0.17179175521752846`", ",", 
   "0.17061393572335867`", ",", "0.17061480739252702`", ",", 
   "0.1699756537106735`", ",", "0.16718214485104999`", ",", 
   "0.16595898655265273`", ",", "0.16277452625099087`", ",", 
   "0.17167376696447118`", ",", "0.1721869759378466`", ",", 
   "0.1766469344203205`", ",", "0.18144988757280384`", ",", 
   "0.19480984699446782`", ",", "0.18429029500570035`", ",", 
   "0.18421960399849868`", ",", "0.1784775432319505`", ",", 
   "0.18583189589361657`", ",", "0.17836990003976133`", ",", 
   "0.18058293674732184`", ",", "0.17539632165923935`", ",", 
   "0.17137640735251652`", ",", "0.16739986846195962`", ",", 
   "0.17011698510481507`", ",", "0.1706903034021249`", ",", 
   "0.16440947306656678`", ",", "0.16381627848848737`", ",", 
   "0.16393141331856478`", ",", "0.1638487985453806`", ",", 
   "0.1632653856237158`", ",", "0.16272695577332447`", ",", 
   "0.16611044029211286`", ",", "0.17436897665429887`", ",", 
   "0.19305860173962652`", ",", "0.1945032636659728`", ",", 
   "0.19407821095366162`", ",", "0.19659045779174186`", ",", 
   "0.19868146044760268`", ",", "0.20069094488680622`", ",", 
   "0.20106482268972412`", ",", "0.20547338485488176`", ",", 
   "0.20547361163082284`", ",", "0.2077315834172288`", ",", 
   "0.20771260023593355`", ",", "0.20924054616987167`", ",", 
   "0.21324083661377893`", ",", "0.21502696422820414`", ",", 
   "0.21478336530261047`", ",", "0.21728301641206427`", ",", 
   "0.24135744864148403`", ",", "0.2427451980147968`", ",", 
   "0.2442557171527202`", ",", "0.25075465460689395`", ",", 
   "0.2474311416953987`", ",", "0.24773349383204243`", ",", 
   "0.25006248213399535`", ",", "0.25357414229958575`", ",", 
   "0.2530545747303683`", ",", "0.24747721615819737`", ",", 
   "0.24766349085486472`", ",", "0.24377457582626968`", ",", 
   "0.24149780635226126`", ",", "0.23159507246438663`", ",", 
   "0.23059192523926456`", ",", "0.23002612985369203`", ",", 
   "0.23000148594756517`", ",", "0.22593368361550828`", ",", 
   "0.22662749104617116`", ",", "0.22347378236513069`", ",", 
   "0.22507532935482882`", ",", "0.22631697925376876`", ",", 
   "0.22751812156021303`", ",", "0.22676744595938822`", ",", 
   "0.2296767365086088`", ",", "0.2310433827929205`", ",", 
   "0.2367439757791008`", ",", "0.23675455564341844`", ",", 
   "0.23677470400983555`", ",", "0.23670409422901428`", ",", 
   "0.2365632324072602`", ",", "0.23597905331389224`", ",", 
   "0.23208823190524358`", ",", "0.21827226843012956`", ",", 
   "0.21687883713574407`", ",", "0.2177327673145666`", ",", 
   "0.2149265148172581`", ",", "0.21240928506255616`", ",", 
   "0.21129575117005286`", ",", "0.21095296864282617`", ",", 
   "0.20518490084922686`", ",", "0.20867422926560303`", ",", 
   "0.21201799784536737`", ",", "0.21311545913492472`", ",", 
   "0.21402610728988317`", ",", "0.2109250678002322`", ",", 
   "0.21058818902167342`", ",", "0.2102322910391699`", ",", 
   "0.20434329549829486`", ",", "0.17864951781705102`", ",", 
   "0.17631814978987193`", ",", "0.17483306656183856`", ",", 
   "0.17865045461737727`", ",", "0.17898761657777995`", ",", 
   "0.17844294216423373`", ",", "0.17520541239407264`", ",", 
   "0.17316115405083576`", ",", "0.1773968365722466`", ",", 
   "0.1773407580870501`", ",", "0.17689898456788733`", ",", 
   "0.1805584588389566`", ",", "0.1792161441885387`", ",", 
   "0.18301662680939437`", ",", "0.1864117954209619`", ",", 
   "0.1866067351330124`", ",", "0.18942008711848307`", ",", 
   "0.19142898690039056`", ",", "0.20309576805043478`", ",", 
   "0.20352405171257912`", ",", "0.21092985616807297`", ",", 
   "0.212103684636264`", ",", "0.2130393006610564`", ",", 
   "0.21202159355159572`", ",", "0.20815619776520763`", ",", 
   "0.2061199099634647`", ",", "0.20517973885871915`", ",", 
   "0.20875065207796611`", ",", "0.2086470659900557`", ",", 
   "0.21148507758739887`", ",", "0.2106698686091889`", ",", 
   "0.21298654371680958`", ",", "0.2113958446421736`", ",", 
   "0.21271905397839697`", ",", "0.21259417130175887`", ",", 
   "0.21606860062171673`", ",", "0.22224046299278202`", ",", 
   "0.2227293091339683`", ",", "0.22953442319113637`", ",", 
   "0.22871665837218103`", ",", "0.23043509234689913`", ",", 
   "0.22678250638240843`", ",", "0.22037562274586203`", ",", 
   "0.231065028684927`", ",", "0.23062141660456564`", ",", 
   "0.2310596218502841`", ",", "0.2288853421781387`", ",", 
   "0.2346225428773957`", ",", "0.23394966348567636`", ",", 
   "0.2520541871087655`", ",", "0.25302061407450926`", ",", 
   "0.2852522789670753`", ",", "0.3055510496515198`", ",", 
   "0.3122805324402683`", ",", "0.31784461740495645`", ",", 
   "0.31751532492873846`", ",", "0.3165845514498349`", ",", 
   "0.3139481554707629`", ",", "0.3139780094651318`", ",", 
   "0.32752614256971085`", ",", "0.3316853423835555`", ",", 
   "0.33168764606612067`", ",", "0.3454472645746728`", ",", 
   "0.3425657683392697`", ",", "0.34278690810435786`", ",", 
   "0.3441525806437084`", ",", "0.3424259018835656`", ",", 
   "0.33685427382687216`", ",", "0.33798288397825466`", ",", 
   "0.33515575720737634`", ",", "0.3362669571522447`", ",", 
   "0.3358079589775323`", ",", "0.3359642249787197`", ",", 
   "0.33567854712864287`", ",", "0.3387882911065519`", ",", 
   "0.33577731936445354`", ",", "0.3346414719010012`", ",", 
   "0.33526971247582305`", ",", "0.3342982173401092`", ",", 
   "0.3363532198743213`", ",", "0.3384270026992027`", ",", 
   "0.3383255366701716`", ",", "0.3379994257881304`", ",", 
   "0.34394167975409073`", ",", "0.3416991223747404`", ",", 
   "0.3380486232057447`", ",", "0.33865064381881305`", ",", 
   "0.3339183481853137`", ",", "0.3361011164967486`", ",", 
   "0.33858549490216094`", ",", "0.3392444387121444`", ",", 
   "0.33792659441152967`", ",", "0.33478080258038173`", ",", 
   "0.33478873890874533`", ",", "0.3376562146621261`", ",", 
   "0.35516980510025575`", ",", "0.35840515422293856`", ",", 
   "0.35796321742979886`", ",", "0.34725786591384383`", ",", 
   "0.3532062209303648`", ",", "0.32662196667777865`", ",", 
   "0.3021248388209131`", ",", "0.3244095277168216`", ",", 
   "0.3198416701992953`", ",", "0.3197699095288746`", ",", 
   "0.3256896903340046`", ",", "0.3286017207955484`", ",", 
   "0.32889030579009043`", ",", "0.3164044904239264`", ",", 
   "0.30882467612363623`", ",", "0.30888464458430803`", ",", 
   "0.29562331529172786`", ",", "0.29534394545859544`", ",", 
   "0.29624739504562375`", ",", "0.29134451181179766`", ",", 
   "0.2891112222304511`", ",", "0.29127027310523`", ",", 
   "0.2965271701954054`", ",", "0.30160342325373757`", ",", 
   "0.29851692988206463`", ",", "0.2983835335861102`", ",", 
   "0.30272725981057264`", ",", "0.3037064289622539`", ",", 
   "0.3042866246945822`", ",", "0.3042636445102935`", ",", 
   "0.3048913488463835`", ",", "0.3072143041563537`", ",", 
   "0.311420862701735`", ",", "0.3082934334497897`", ",", 
   "0.31189294074613844`", ",", "0.3118364932889504`", ",", 
   "0.3173086936251393`", ",", "0.3145602354043779`", ",", 
   "0.314397589478437`", ",", "0.3150482922885666`", ",", "0.31452219977306`",
    ",", "0.31445163329911535`", ",", "0.3124168850672233`", ",", 
   "0.3078627513269493`", ",", "0.3051535451930837`", ",", 
   "0.30543295144875265`", ",", "0.30804253932198156`", ",", 
   "0.30809028033728175`", ",", "0.3046756769533618`", ",", 
   "0.28240050637058506`", ",", "0.2861328333530322`", ",", 
   "0.2859252272890246`", ",", "0.2839246660957575`", ",", 
   "0.27494682225249073`", ",", "0.2755170623564863`", ",", 
   "0.27589262076423215`", ",", "0.2431695610412567`", ",", 
   "0.24234703285123407`", ",", "0.24411802815142072`", ",", 
   "0.23334636522745456`", ",", "0.22974328541189024`", ",", 
   "0.23032478586690674`", ",", "0.22943321077380807`", ",", 
   "0.22951615896122504`", ",", "0.22956922987091`", ",", 
   "0.2242891723486032`", ",", "0.22456044803418695`", ",", 
   "0.2238547337889806`", ",", "0.22401688118870755`", ",", 
   "0.22417825886432147`", ",", "0.22556209029556495`", ",", 
   "0.21887327379808458`", ",", "0.21373714080180853`", ",", 
   "0.25169936795065423`", ",", "0.24922717698628855`", ",", 
   "0.24422806849374215`", ",", "0.24323824944739045`", ",", 
   "0.23767989063130196`", ",", "0.23668971842922917`", ",", 
   "0.2326487809184561`", ",", "0.23014555357845243`", ",", 
   "0.21989447352126967`", ",", "0.2177784124745384`", ",", 
   "0.20914305601057678`", ",", "0.21721966750917887`", ",", 
   "0.21339951623069237`", ",", "0.21439441810443227`", ",", 
   "0.21520376864196525`", ",", "0.2248035568995453`", ",", 
   "0.22377939684737108`", ",", "0.2229561184634375`", ",", 
   "0.22741962125119583`", ",", "0.2283141740028911`", ",", 
   "0.22716062935928724`", ",", "0.22540208057426098`", ",", 
   "0.21556731663541956`", ",", "0.21588746041338147`", ",", 
   "0.2162788832992832`", ",", "0.21622213503324067`", ",", 
   "0.20656113880219118`", ",", "0.21638762208285053`", ",", 
   "0.21795079570518075`", ",", "0.21777608242496777`", ",", 
   "0.22053636730662207`", ",", "0.21760503634786876`", ",", 
   "0.2180682688656466`", ",", "0.22333086041642006`", ",", 
   "0.2329141163723175`", ",", "0.23509553074711625`", ",", 
   "0.23545509101479978`", ",", "0.2393791198047029`", ",", 
   "0.23851791025175254`", ",", "0.2402268918088259`", ",", 
   "0.24106679676945425`", ",", "0.24173986474694764`", ",", 
   "0.2416954946346158`", ",", "0.24176235020569964`", ",", 
   "0.24173639426328794`", ",", "0.24485143562036393`", ",", 
   "0.24457744815014862`", ",", "0.24972566560040624`", ",", 
   "0.24430535834145128`", ",", "0.21490585388201958`", ",", 
   "0.21401952146928446`", ",", "0.21412494972610158`", ",", 
   "0.21821958802058344`", ",", "0.21943853484845677`", ",", 
   "0.2205357510671672`", ",", "0.23359617472235628`", ",", 
   "0.25761801107214355`", ",", "0.2769452604811068`", ",", 
   "0.2772693301335232`", ",", "0.2905866919164245`", ",", 
   "0.2896479911885544`", ",", "0.2898417364181713`", ",", 
   "0.2922676061053545`", ",", "0.3466925407777245`", ",", 
   "0.3414575572839377`", ",", "0.34229725635859876`", ",", 
   "0.35171079145013495`", ",", "0.3482674081209664`", ",", 
   "0.34810352095276736`", ",", "0.3486955531323074`", ",", 
   "0.35514137989151096`", ",", "0.35522476988826257`", ",", 
   "0.35324335707852894`", ",", "0.35218425406818227`", ",", 
   "0.3521414410503478`", ",", "0.35256728201900067`", ",", 
   "0.350464109417776`", ",", "0.3509085975966855`", ",", 
   "0.3522941549631535`", ",", "0.35557664027193364`", ",", 
   "0.3552855323461497`", ",", "0.3772261612904536`", ",", 
   "0.37183343063803226`", ",", "0.3660691546214168`", ",", 
   "0.36632008378393377`", ",", "0.36646730026520424`", ",", 
   "0.3636532186683008`", ",", "0.36427616271330726`", ",", 
   "0.36412600142419904`", ",", "0.3697321856351531`", ",", 
   "0.3699603560769201`", ",", "0.367263627431912`", ",", 
   "0.36790356853410255`", ",", "0.3676183119432177`", ",", 
   "0.3685770398141665`", ",", "0.36832194735239204`", ",", 
   "0.3614079972910803`", ",", "0.35902649021694516`", ",", 
   "0.35875689914872005`", ",", "0.3569902451403962`", ",", 
   "0.3602612778133267`", ",", "0.35954803277571196`", ",", 
   "0.3595286051538762`", ",", "0.360534865356992`", ",", 
   "0.35559767948709997`", ",", "0.3452441777128065`", ",", 
   "0.32532429093791937`", ",", "0.3255641202836316`", ",", 
   "0.3166939993792045`", ",", "0.31722877507401154`", ",", 
   "0.31876473803664723`", ",", "0.3159493075396581`", ",", 
   "0.2528898672030584`", ",", "0.2532026451286807`", ",", 
   "0.25429768651815626`", ",", "0.24410087315626172`", ",", 
   "0.24446288070998928`", ",", "0.24510801226202475`", ",", 
   "0.24542453618766139`", ",", "0.23563859390063172`", ",", 
   "0.23524606952980961`", ",", "0.23516770619255914`", ",", 
   "0.23670693649288047`", ",", "0.24018849801425524`", ",", 
   "0.23954376721312468`", ",", "0.2369740667719338`", ",", 
   "0.25763490225866925`", ",", "0.255693717401946`", ",", 
   "0.2482880082676701`", ",", "0.25048466169259903`", ",", 
   "0.22390884208092304`", ",", "0.22365593562613792`", ",", 
   "0.21758569864180177`", ",", "0.21776524804120748`", ",", 
   "0.21813546245921395`", ",", "0.215388326479516`", ",", 
   "0.21417770901741945`", ",", "0.21420370392021992`", ",", 
   "0.20186513804501097`", ",", "0.20326533690058976`", ",", 
   "0.20294592058675384`", ",", "0.2009402432569821`", ",", 
   "0.20145358951047862`", ",", "0.20271755056612029`", ",", 
   "0.20515266712997268`", ",", "0.20828854616779133`", ",", 
   "0.21038578827397011`", ",", "0.21211811456110644`", ",", 
   "0.2121500977548071`", ",", "0.21155275339426677`", ",", 
   "0.21177769298150692`", ",", "0.2116620225284479`", ",", 
   "0.2118665446536`", ",", "0.2115925027107517`", ",", "0.2066777338738404`",
    ",", "0.20804494176473692`", ",", "0.20842957785405056`", ",", 
   "0.20633857168141054`", ",", "0.21083235143935358`", ",", 
   "0.2094459122171262`", ",", "0.21003482988422922`", ",", 
   "0.2108719364844908`", ",", "0.21092483270010817`", ",", 
   "0.21069962740000758`", ",", "0.2088431204031739`", ",", 
   "0.20784981348985337`", ",", "0.2067281474733479`", ",", 
   "0.20613390413502425`", ",", "0.2094772560712034`", ",", 
   "0.21885034405511297`", ",", "0.22126476231317285`", ",", 
   "0.22544091269023134`", ",", "0.22769361176298888`", ",", 
   "0.22973426584473386`", ",", "0.22921652553624008`", ",", 
   "0.20463424763488314`", ",", "0.2058049667851398`", ",", 
   "0.21038396457292502`", ",", "0.21494002683844873`", ",", 
   "0.2075407532594349`", ",", "0.2074177838129085`", ",", 
   "0.21300940139841276`", ",", "0.2111887268772813`", ",", 
   "0.2104984651886404`", ",", "0.21666427048427078`", ",", 
   "0.21754929711164556`", ",", "0.22173380321721142`", ",", 
   "0.23711819369458037`", ",", "0.25155754806714603`", ",", 
   "0.2625305106201196`", ",", "0.2629040464810892`", ",", 
   "0.2632852836379221`", ",", "0.2601141957603021`", ",", 
   "0.2538458700427739`", ",", "0.2526154769942048`", ",", 
   "0.25771226972757566`", ",", "0.25995263920317446`", ",", 
   "0.25983180519486176`", ",", "0.26783155728952796`", ",", 
   "0.27809139403783545`", ",", "0.2823725384279125`", ",", 
   "0.28151571640115663`", ",", "0.28133077436413545`", ",", 
   "0.27844098559583536`", ",", "0.28093725544754744`", ",", 
   "0.279860994277853`", ",", "0.32627667228374224`", ",", 
   "0.3222523949437314`", ",", "0.3224301068667569`", ",", 
   "0.3234861891654728`", ",", "0.3287542388422615`", ",", 
   "0.3271040587119467`", ",", "0.3251210133273957`", ",", 
   "0.3264664875469213`", ",", "0.3264422040168201`", ",", 
   "0.3266384995598358`", ",", "0.32797531204899993`", ",", 
   "0.3569102341994887`", ",", "0.3567289115131328`", ",", 
   "0.3596591539434845`", ",", "0.3536168598502735`", ",", 
   "0.3566836301235899`", ",", "0.35626688118597283`", ",", 
   "0.3571733426606469`", ",", "0.3622929647656309`", ",", 
   "0.3660381590064494`", ",", "0.3717940965262276`", ",", 
   "0.37015736290164925`", ",", "0.3703235808832288`", ",", 
   "0.3693037930291746`", ",", "0.3676542412848407`", ",", 
   "0.36806185648824175`", ",", "0.3674864080498344`", ",", 
   "0.36214957759765143`", ",", "0.378189098422131`", ",", 
   "0.38474007503571284`", ",", "0.37741612770213595`", ",", 
   "0.3695629577887974`", ",", "0.36327059914388204`", ",", 
   "0.36295806170171907`", ",", "0.36354973817357145`", ",", 
   "0.3649839645103469`", ",", "0.36407613455030136`", ",", 
   "0.37178169501432456`", ",", "0.3711191630823801`", ",", 
   "0.38256362679093686`", ",", "0.3826663351962715`", ",", 
   "0.3735048845844179`", ",", "0.3656046740330416`", ",", 
   "0.3658697261943875`", ",", "0.47069371246936287`", ",", 
   "0.472779499025302`", ",", "0.47632485443151357`", ",", 
   "0.4771575684048396`", ",", "0.4769048848395057`", ",", 
   "0.4463473386768441`", ",", "0.44624505440406226`", ",", 
   "0.4485281655403991`", ",", "0.45464176546083734`", ",", 
   "0.44721653627988317`", ",", "0.4539279699585815`", ",", 
   "0.4559118486642861`", ",", "0.4558125423943253`", ",", 
   "0.4583338880278354`", ",", "0.4581631695640496`", ",", 
   "0.457193923099821`", ",", "0.4345302020820764`", ",", 
   "0.43243495769794693`", ",", "0.43206937644144566`", ",", 
   "0.4320615782505478`", ",", "0.42943100366192305`", ",", 
   "0.43065424917995676`", ",", "0.43133272759177`", ",", 
   "0.423962801288684`", ",", "0.4214629125352217`", ",", 
   "0.41776239079231814`", ",", "0.41968198474394997`", ",", 
   "0.42521251630058304`", ",", "0.4257015736686767`", ",", 
   "0.4269656622385819`", ",", "0.42654947048474734`", ",", 
   "0.4280906266592632`", ",", "0.42984960428384994`", ",", 
   "0.41609416780667635`", ",", "0.40925548596073985`", ",", 
   "0.414485771221454`", ",", "0.4163607806977457`", ",", 
   "0.4163008442302379`", ",", "0.4161444366669211`", ",", 
   "0.4151918151305522`", ",", "0.41702252849372334`", ",", 
   "0.41715347102205935`", ",", "0.40971895588280915`", ",", 
   "0.40587050991601314`", ",", "0.3963440694883499`", ",", 
   "0.4016585553275363`", ",", "0.40179355085855617`", ",", 
   "0.40120159385537957`", ",", "0.3984558856605`", ",", 
   "0.2666310062835241`", ",", "0.2619949256774628`", ",", 
   "0.2566573005348907`", ",", "0.2573235955873672`", ",", 
   "0.25732264899158647`", ",", "0.2582021604400074`", ",", 
   "0.26306586774290686`", ",", "0.25981664865384746`", ",", 
   "0.27669455659652936`", ",", "0.2822101092104751`", ",", 
   "0.2721072151988888`", ",", "0.27466038725658815`", ",", 
   "0.27744904440534107`", ",", "0.27275969721912885`", ",", 
   "0.27371340896604857`", ",", "0.2791035019267041`", ",", 
   "0.2874439500686005`", ",", "0.29559064649618366`", ",", 
   "0.2909524051199715`", ",", "0.2924719281844614`", ",", 
   "0.2923550707692838`", ",", "0.2941623961555239`", ",", 
   "0.2928313493015902`", ",", "0.29284647801668595`", ",", 
   "0.29310005853964766`", ",", "0.2877449217189771`", ",", 
   "0.2815813012596549`", ",", "0.28188090546364164`", ",", 
   "0.2914210069918575`", ",", "0.29180814530288857`", ",", 
   "0.2918556334610762`", ",", "0.29438644039993844`", ",", 
   "0.2904822689919143`", ",", "0.2905637803006315`", ",", 
   "0.28984626667540675`", ",", "0.2844685638839308`", ",", 
   "0.2783092837598902`", ",", "0.2789128475616667`", ",", 
   "0.2807349689143515`", ",", "0.28087896636967313`", ",", 
   "0.27707109771734745`", ",", "0.2769851694722115`", ",", 
   "0.2775140944178462`", ",", "0.27597777078868163`", ",", 
   "0.2723954879806051`", ",", "0.2628901310244214`", ",", 
   "0.2629898338008296`", ",", "0.26438375607905135`", ",", 
   "0.26402920320684664`", ",", "0.26478782892156855`", ",", 
   "0.2645148359626516`", ",", "0.26450323471382464`", ",", 
   "0.264592406422761`", ",", "0.26648934998480595`", ",", 
   "0.26607641027763823`", ",", "0.26773125654175506`", ",", 
   "0.2652272129965099`", ",", "0.2334510032103182`", ",", 
   "0.2264155588767112`", ",", "0.22671764454702267`", ",", 
   "0.23305102246589468`", ",", "0.23476370847740566`", ",", 
   "0.23494081438081518`", ",", "0.23534279888179624`", ",", 
   "0.23075139569090522`", ",", "0.223482892729315`", ",", 
   "0.2130882881188655`", ",", "0.21563598384084132`", ",", 
   "0.21301692763186708`", ",", "0.21168839007366586`", ",", 
   "0.20473913975111693`", ",", "0.20463195489802596`", ",", 
   "0.2029000754679511`", ",", "0.2049081489529958`", ",", 
   "0.20454573798773842`", ",", "0.20738828482464547`", ",", 
   "0.23197725281642778`", ",", "0.2183186864812122`", ",", 
   "0.21664853062386544`", ",", "0.21914315938825413`", ",", 
   "0.21521055203080236`", ",", "0.2145033685289123`", ",", 
   "0.2152584948654401`", ",", "0.21697884244334617`", ",", 
   "0.21887874618026623`", ",", "0.2190232302223516`", ",", 
   "0.21847559974901853`", ",", "0.21617620043096017`", ",", 
   "0.21856470193550678`", ",", "0.22737429136060944`", ",", 
   "0.24949138396603196`", ",", "0.2507462237037694`", ",", 
   "0.24761790062234898`", ",", "0.2477604553560603`", ",", 
   "0.24743293808447325`", ",", "0.24983952806665766`", ",", 
   "0.24730763920882148`", ",", "0.24701943269314053`", ",", 
   "0.24453046099271844`", ",", "0.24451728190150424`", ",", 
   "0.2551194763515076`", ",", "0.24943835534720168`", ",", 
   "0.246032979059229`", ",", "0.24631875451420657`", ",", 
   "0.23610762479445319`", ",", "0.23882095507940954`", ",", 
   "0.23746094290110523`", ",", "0.23477091191587313`", ",", 
   "0.23603109671543138`", ",", "0.23643156822041764`", ",", 
   "0.2689895457996611`", ",", "0.26954420711374083`", ",", 
   "0.2719919950621219`", ",", "0.2826049733425942`", ",", 
   "0.281194329391484`", ",", "0.2840424696745298`", ",", 
   "0.28424336937714645`", ",", "0.285541219998563`", ",", 
   "0.3043942052690047`", ",", "0.30459315057219083`", ",", 
   "0.3073847941705668`", ",", "0.3078205617626509`", ",", 
   "0.3057007737009934`", ",", "0.30764486659347556`", ",", 
   "0.30773511923612845`", ",", "0.28800480860770283`", ",", 
   "0.2895909782463535`", ",", "0.2895466029869973`", ",", 
   "0.28847480209081233`", ",", "0.2896720950465048`", ",", 
   "0.2905197720785675`", ",", "0.2902019377518086`", ",", 
   "0.289276664931765`", ",", "0.2878673875183019`", ",", 
   "0.28702040244546634`", ",", "0.2870735797080668`", ",", 
   "0.28717319034732064`", ",", "0.2851022870070914`", ",", 
   "0.2834278577510306`", ",", "0.26448518528354054`", ",", 
   "0.2623645350865913`", ",", "0.26373280870996085`", ",", 
   "0.26467027689589984`", ",", "0.264137457400899`", ",", 
   "0.26886056503792943`", ",", "0.27102342080265496`", ",", 
   "0.27126819385629775`", ",", "0.2713962153310252`", ",", 
   "0.2726941753434655`", ",", "0.263891423730224`", ",", 
   "0.2639616712177652`", ",", "0.2669745803458156`", ",", 
   "0.26795632655059276`", ",", "0.2681202463640559`", ",", 
   "0.26444597211255255`", ",", "0.26382008013822517`", ",", 
   "0.2653116122448939`", ",", "0.2636553686170554`", ",", 
   "0.2596065433697151`", ",", "0.2234796431033329`", ",", 
   "0.22401123379939278`", ",", "0.22096030109050765`", ",", 
   "0.20620071417889885`", ",", "0.20554822105760204`", ",", 
   "0.20468045081701772`", ",", "0.20767249599592374`", ",", 
   "0.20810843968676287`", ",", "0.18223613901448255`", ",", 
   "0.1900002550565055`", ",", "0.18547020119338284`", ",", 
   "0.18494238604488417`", ",", "0.18758875062237174`", ",", 
   "0.18492546895735404`", ",", "0.17959729854618464`", ",", 
   "0.18118768096635884`", ",", "0.17789312460922296`", ",", 
   "0.18054827095987522`", ",", "0.17996892563712602`", ",", 
   "0.17652942007180866`", ",", "0.17700032126897403`", ",", 
   "0.17967010553735083`", ",", "0.17995072356212974`", ",", 
   "0.19682698677452903`", ",", "0.19742135055904894`", ",", 
   "0.19850534002379164`", ",", "0.19936482956859403`", ",", 
   "0.20070026253632695`", ",", "0.19531139116462004`", ",", 
   "0.1983297165600309`", ",", "0.20440463503610393`", ",", 
   "0.20268532371449682`", ",", "0.20164598789948518`", ",", 
   "0.20146564867110411`", ",", "0.1949758029527533`", ",", 
   "0.1926092423264811`", ",", "0.19260553451098597`", ",", 
   "0.19689908184095262`", ",", "0.19972394838729468`", ",", 
   "0.20015655709360353`", ",", "0.20851382440951605`", ",", 
   "0.2072858493335331`", ",", "0.20479500536327852`", ",", 
   "0.20522159478245874`", ",", "0.21004780126619868`", ",", 
   "0.2106611064240765`", ",", "0.2826175739228353`", ",", 
   "0.2833994131943104`", ",", "0.2822190504211503`", ",", 
   "0.282212956681979`", ",", "0.2816534866311375`", ",", 
   "0.2822929045317501`", ",", "0.2828177686146885`", ",", 
   "0.2825921534712379`", ",", "0.28124943431344007`", ",", 
   "0.2790799326147834`", ",", "0.2774633125071189`", ",", 
   "0.2768284356317797`", ",", "0.2721041452664479`", ",", 
   "0.2720775464996259`", ",", "0.271935921270634`", ",", 
   "0.2724690515533946`", ",", "0.272102845895044`", ",", 
   "0.2730424938433729`", ",", "0.27298185359274596`", ",", 
   "0.27379818597145683`", ",", "0.2734814956137305`", ",", 
   "0.2772208139857209`", ",", "0.27713118420513144`", ",", 
   "0.2768286267117048`", ",", "0.27617211149765225`", ",", 
   "0.27549971912107185`", ",", "0.2609760620700447`", ",", 
   "0.26089342219416617`", ",", "0.2606353050369105`", ",", 
   "0.26142891189118217`", ",", "0.2605792740876264`", ",", 
   "0.2601082344400081`", ",", "0.2594273731908501`", ",", 
   "0.25491450467727717`", ",", "0.25543526262414606`", ",", 
   "0.2549463544171018`", ",", "0.2547012302095907`", ",", 
   "0.25373077882707956`", ",", "0.25463820000620446`", ",", 
   "0.25548890293347265`", ",", "0.2525352840443157`", ",", 
   "0.2483990442102599`", ",", "0.24813559340978092`", ",", 
   "0.24168688128011875`", ",", "0.23998758514748195`", ",", 
   "0.23979142816943766`", ",", "0.2394177386634304`", ",", 
   "0.2376352848456621`", ",", "0.23932508172522907`", ",", 
   "0.144547864090324`", ",", "0.1443499881992714`", ",", 
   "0.14777947304633407`", ",", "0.14901834078576925`", ",", 
   "0.1491685081134199`", ",", "0.14695332211293216`", ",", 
   "0.14611858139454265`", ",", "0.1477353266780257`", ",", 
   "0.1468110017949221`", ",", "0.14125107464046657`", ",", 
   "0.14112439788305153`", ",", "0.22847711212665625`", ",", 
   "0.22644334206307862`", ",", "0.2414159185838741`", ",", 
   "0.2416148517683109`", ",", "0.23852914795339047`", ",", 
   "0.2364570554272904`", ",", "0.2344279925748682`", ",", 
   "0.23586326726170823`", ",", "0.23601137897302632`", ",", 
   "0.2348974092535839`", ",", "0.23177627476415963`", ",", 
   "0.2319666580185248`", ",", "0.23308912645584204`", ",", 
   "0.2329048106881132`", ",", "0.2329575918405101`", ",", 
   "0.23395812947435532`", ",", "0.23554072578893065`", ",", 
   "0.23643289601027787`", ",", "0.23595269377918082`", ",", 
   "0.23592355025461706`", ",", "0.23377729747133413`", ",", 
   "0.23218988845342758`", ",", "0.2347437418389926`", ",", 
   "0.23484594755698385`", ",", "0.23701368009674117`", ",", 
   "0.2368209998641977`", ",", "0.23785135735962104`", ",", 
   "0.23831846485517683`", ",", "0.23842644844350697`", ",", 
   "0.2364744046649476`", ",", "0.23622006484066388`", ",", 
   "0.23748232223931742`", ",", "0.23728767725512334`", ",", 
   "0.23778846240124418`", ",", "0.24243506137184953`", ",", 
   "0.24353878971786697`", ",", "0.24087835990641698`", ",", 
   "0.23679981182911228`", ",", "0.23670204869102932`", ",", 
   "0.23649090489959693`", ",", "0.23558429889509433`", ",", 
   "0.2343691715479221`", ",", "0.23553211257337017`", ",", 
   "0.23422987641810933`", ",", "0.23420871854165637`", ",", 
   "0.23428249396651918`", ",", "0.23405131258584488`", ",", 
   "0.23397459570596968`", ",", "0.23072985661195156`", ",", 
   "0.15423593483885598`", ",", "0.15889624886458176`", ",", 
   "0.13879335867895218`", ",", "0.13830596048722182`", ",", 
   "0.13827897980146908`", ",", "0.13828657109315193`", ",", 
   "0.1402242862658748`", ",", "0.14155591919152766`", ",", 
   "0.13946103710190683`", ",", "0.1463565487409592`", ",", 
   "0.14866183975267966`", ",", "0.148917940979665`", ",", 
   "0.14775654842491615`", ",", "0.15702144476908014`", ",", 
   "0.1572351731154756`", ",", "0.1552661655142179`", ",", 
   "0.1549177927478223`", ",", "0.15503892107020623`", ",", 
   "0.15535690820236456`", ",", "0.1686405190586028`", ",", 
   "0.16882482580630584`", ",", "0.16836403258322305`", ",", 
   "0.16443682235810486`", ",", "0.1643375637554197`", ",", 
   "0.15970530194554994`", ",", "0.1593870474590165`", ",", 
   "0.16060135907530818`", ",", "0.15796988391157565`", ",", 
   "0.15862744211285926`", ",", "0.15854085054522765`", ",", 
   "0.1584952350157066`", ",", "0.15685428013216227`", ",", 
   "0.15906413241625048`", ",", "0.1585626298720747`", ",", 
   "0.15280162203831718`", ",", "0.15033715846986967`", ",", 
   "0.14924967425073737`", ",", "0.1503049279302766`", ",", 
   "0.1520715858884153`", ",", "0.15152584189648588`", ",", 
   "0.14865373447516403`", ",", "0.14890070913529913`", ",", 
   "0.18070599092505754`", ",", "0.1821966132206673`", ",", 
   "0.18261745797025042`", ",", "0.18201599011837252`", ",", 
   "0.18123381769680239`", ",", "0.19256816201229732`", ",", 
   "0.19259251366726496`", ",", "0.19236310705478424`", ",", 
   "0.18744843118706747`", ",", "0.18770963178541178`", ",", 
   "0.18816781457197418`", ",", "0.18780733560636884`", ",", 
   "0.18908401526310425`", ",", "0.1871876504870868`", ",", 
   "0.1875941346893733`", ",", "0.18833619951395283`", ",", 
   "0.20493864780202864`", ",", "0.21247752705651926`", ",", 
   "0.21268557336346547`", ",", "0.2124073149939612`", ",", 
   "0.2081849721623684`", ",", "0.2086742761785131`", ",", 
   "0.20837117665934735`", ",", "0.20611110130345708`", ",", 
   "0.20656672341238205`", ",", "0.21156232621780485`", ",", 
   "0.20215207315558104`", ",", "0.20211150015256707`", ",", 
   "0.20288504455873677`", ",", "0.20417899445767232`", ",", 
   "0.20629298507225188`", ",", "0.20867113445176524`", ",", 
   "0.2110736191270033`", ",", "0.21434546787329026`", ",", 
   "0.22229290896007528`", ",", "0.22078910982338235`", ",", 
   "0.22393599513082044`", ",", "0.22385609477435944`", ",", 
   "0.22258841108683258`", ",", "0.22311266290502407`", ",", 
   "0.2233239651259878`", ",", "0.22356161368269922`", ",", 
   "0.22392274169714374`", ",", "0.22545236884103695`", ",", 
   "0.22563164152346307`", ",", "0.2242786842899402`", ",", 
   "0.22430606100733375`", ",", "0.22431844834910986`", ",", 
   "0.2239182571422636`", ",", "0.1995273011232109`", ",", 
   "0.19978057748008776`", ",", "0.20099648341485937`", ",", 
   "0.20097432524788703`", ",", "0.20065151951305785`", ",", 
   "0.1920294347064511`", ",", "0.19326823177938038`", ",", 
   "0.19504934916403896`", ",", "0.19494535220057513`", ",", 
   "0.196513463376832`", ",", "0.1982158934109557`", ",", 
   "0.19918983288144823`", ",", "0.19763317414157844`", ",", 
   "0.21417219365930232`", ",", "0.21260127503460022`", ",", 
   "0.21197709830459457`", ",", "0.1895509260639627`", ",", 
   "0.18083298079839974`", ",", "0.1889089649693686`", ",", 
   "0.19091625001546905`", ",", "0.19283198415638955`", ",", 
   "0.1929194471429267`", ",", "0.19758106242760942`", ",", 
   "0.2007746899100158`", ",", "0.20246627975408202`", ",", 
   "0.20465365546847566`", ",", "0.2138971290534223`", ",", 
   "0.21480232865598714`", ",", "0.21392498188955197`", ",", 
   "0.21220426920371208`", ",", "0.21005539490795433`", ",", 
   "0.20923311912016226`", ",", "0.20787592112951625`", ",", 
   "0.20655249292262934`", ",", "0.2045253785091539`", ",", 
   "0.20591099769127244`", ",", "0.2131807882321681`", ",", 
   "0.21304011614728555`", ",", "0.2152414016960379`", ",", 
   "0.22881381456460886`", ",", "0.22857080699097473`", ",", 
   "0.2358398258167401`", ",", "0.23571460504913963`", ",", 
   "0.23414824763115558`", ",", "0.2418847284855639`", ",", 
   "0.2424043672145912`", ",", "0.24933139675274613`", ",", 
   "0.24984918880146295`", ",", "0.25644538351997015`", ",", 
   "0.25610368232338887`", ",", "0.2542151710858739`", ",", 
   "0.2649048600679386`", ",", "0.2922417346223698`", ",", 
   "0.30024201496429925`", ",", "0.3009660154704353`", ",", 
   "0.30173189001029693`", ",", "0.3001076074095016`", ",", 
   "0.30054978087208334`", ",", "0.29811508497806033`", ",", 
   "0.29807375110263`", ",", "0.29724879208393906`", ",", 
   "0.30028814848268776`", ",", "0.29424761279088035`", ",", 
   "0.29496479815436166`", ",", "0.29427466973882965`", ",", 
   "0.2940996528159014`", ",", "0.2939151876300894`", ",", 
   "0.28826804299121755`", ",", "0.2871197408299302`", ",", 
   "0.28762783257251523`", ",", "0.28812066800683644`", ",", 
   "0.2921037160931282`", ",", "0.29010304166503503`", ",", 
   "0.2905582045031028`", ",", "0.28657746695581354`", ",", 
   "0.28032633936620216`", ",", "0.2800658676895494`", ",", 
   "0.2830140747621745`", ",", "0.28269028649688527`", ",", 
   "0.28222198802674514`", ",", "0.285041497479164`", ",", 
   "0.2886859943079287`", ",", "0.2892297418748969`", ",", 
   "0.2857956113506739`", ",", "0.2850778035841592`", ",", 
   "0.2772684357228317`", ",", "0.277647113652451`", ",", 
   "0.27787542965273915`", ",", "0.26865492515827316`", ",", 
   "0.26922172175917247`", ",", "0.262045113184472`", ",", 
   "0.27009993188736736`", ",", "0.2699057317334717`", ",", 
   "0.26198553415476517`", ",", "0.2654232855134855`", ",", 
   "0.26402164428866215`", ",", "0.26396108147118935`", ",", 
   "0.25892700912869193`", ",", "0.26073558341513053`", ",", 
   "0.26240902462150484`", ",", "0.2477006568356022`", ",", 
   "0.21681467978715688`", ",", "0.2065024861882529`", ",", 
   "0.2032530763535215`", ",", "0.2021507412106883`", ",", 
   "0.20220580263043042`", ",", "0.20217251678159998`", ",", 
   "0.2036477902788775`", ",", "0.2083528989515666`", ",", 
   "0.20856943148890358`", ",", "0.20641634826362912`", ",", 
   "0.20070432981349315`", ",", "0.19905997853025575`", ",", 
   "0.20273955927191736`"}], "}"}]], "Output",
 CellChangeTimes->{{3.639235361730279*^9, 3.6392353896751328`*^9}, 
   3.639235444911086*^9, 3.639235643106538*^9, {3.639235674103979*^9, 
   3.639235710866315*^9}, 3.639235780352459*^9, {3.6392358119283047`*^9, 
   3.6392358159965878`*^9}, {3.639235852674683*^9, 3.639235865169283*^9}}]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{25, Automatic}, {Automatic, 59}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 138, 3, 28, "Input"],
Cell[699, 25, 952, 16, 63, "Input"],
Cell[CellGroupData[{
Cell[1676, 45, 385, 9, 46, "Input"],
Cell[2064, 56, 248, 5, 28, "Output"]
}, Open  ]],
Cell[2327, 64, 730, 21, 46, "Input"],
Cell[3060, 87, 343, 9, 28, "Input"],
Cell[3406, 98, 216, 5, 28, "Input"],
Cell[3625, 105, 569, 16, 46, "Input"],
Cell[CellGroupData[{
Cell[4219, 125, 186, 3, 28, "Input"],
Cell[4408, 130, 490, 14, 28, "Output"]
}, Open  ]],
Cell[4913, 147, 348, 9, 28, "Input"],
Cell[5264, 158, 278, 8, 28, "Input"],
Cell[5545, 168, 245, 6, 28, "Input"],
Cell[5793, 176, 540, 14, 46, "Input"],
Cell[CellGroupData[{
Cell[6358, 194, 165, 3, 28, "Input"],
Cell[6526, 199, 309, 8, 28, "Output"]
}, Open  ]],
Cell[6850, 210, 412, 12, 28, "Input"],
Cell[CellGroupData[{
Cell[7287, 226, 119, 2, 28, "Input"],
Cell[7409, 230, 269, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7715, 241, 185, 4, 28, "Input"],
Cell[7903, 247, 30215, 507, 229, 1855, 41, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38155, 759, 497, 11, 28, "Input"],
Cell[38655, 772, 2884, 41, 784, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41576, 818, 125, 2, 28, "Input"],
Cell[41704, 822, 88, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41829, 828, 69, 1, 28, "Input"],
Cell[41901, 831, 2603, 46, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44541, 882, 311, 8, 28, "Input"],
Cell[44855, 892, 270, 7, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45162, 904, 123, 2, 28, "Input"],
Cell[45288, 908, 580, 14, 46, "Output"]
}, Open  ]],
Cell[45883, 925, 606, 9, 386, "Input"],
Cell[CellGroupData[{
Cell[46514, 938, 135, 2, 28, "Input"],
Cell[46652, 942, 152, 3, 28, "Output"]
}, Open  ]],
Cell[46819, 948, 287, 8, 28, "Input"],
Cell[CellGroupData[{
Cell[47131, 960, 2836, 70, 318, "Input"],
Cell[CellGroupData[{
Cell[49992, 1034, 116, 1, 22, "Print"],
Cell[50111, 1037, 116, 1, 22, "Print"],
Cell[50230, 1040, 117, 1, 22, "Print"],
Cell[50350, 1043, 115, 1, 22, "Print"],
Cell[50468, 1046, 118, 1, 22, "Print"],
Cell[50589, 1049, 117, 1, 22, "Print"],
Cell[50709, 1052, 115, 1, 22, "Print"],
Cell[50827, 1055, 115, 1, 22, "Print"],
Cell[50945, 1058, 117, 1, 22, "Print"],
Cell[51065, 1061, 116, 1, 22, "Print"],
Cell[51184, 1064, 116, 1, 22, "Print"],
Cell[51303, 1067, 116, 1, 22, "Print"],
Cell[51422, 1070, 116, 1, 22, "Print"],
Cell[51541, 1073, 118, 1, 22, "Print"],
Cell[51662, 1076, 117, 1, 22, "Print"],
Cell[51782, 1079, 116, 1, 22, "Print"],
Cell[51901, 1082, 116, 1, 22, "Print"],
Cell[52020, 1085, 115, 1, 22, "Print"],
Cell[52138, 1088, 116, 1, 22, "Print"],
Cell[52257, 1091, 116, 1, 22, "Print"],
Cell[52376, 1094, 116, 1, 22, "Print"],
Cell[52495, 1097, 115, 1, 22, "Print"],
Cell[52613, 1100, 114, 1, 22, "Print"],
Cell[52730, 1103, 116, 1, 22, "Print"],
Cell[52849, 1106, 116, 1, 22, "Print"],
Cell[52968, 1109, 116, 1, 22, "Print"],
Cell[53087, 1112, 116, 1, 22, "Print"],
Cell[53206, 1115, 115, 1, 22, "Print"],
Cell[53324, 1118, 115, 1, 22, "Print"],
Cell[53442, 1121, 116, 1, 22, "Print"],
Cell[53561, 1124, 108, 1, 22, "Print"],
Cell[53672, 1127, 106, 1, 22, "Print"],
Cell[53781, 1130, 107, 1, 22, "Print"],
Cell[53891, 1133, 105, 1, 22, "Print"],
Cell[53999, 1136, 106, 1, 22, "Print"],
Cell[54108, 1139, 105, 1, 22, "Print"],
Cell[54216, 1142, 107, 1, 22, "Print"],
Cell[54326, 1145, 107, 1, 22, "Print"],
Cell[54436, 1148, 107, 1, 22, "Print"],
Cell[54546, 1151, 108, 1, 22, "Print"],
Cell[54657, 1154, 106, 1, 22, "Print"],
Cell[54766, 1157, 106, 1, 22, "Print"],
Cell[54875, 1160, 106, 1, 22, "Print"],
Cell[54984, 1163, 108, 1, 22, "Print"],
Cell[55095, 1166, 107, 1, 22, "Print"],
Cell[55205, 1169, 106, 1, 22, "Print"],
Cell[55314, 1172, 106, 1, 22, "Print"],
Cell[55423, 1175, 107, 1, 22, "Print"],
Cell[55533, 1178, 106, 1, 22, "Print"],
Cell[55642, 1181, 105, 1, 22, "Print"],
Cell[55750, 1184, 108, 1, 22, "Print"],
Cell[55861, 1187, 104, 1, 22, "Print"],
Cell[55968, 1190, 106, 1, 22, "Print"],
Cell[56077, 1193, 106, 1, 22, "Print"],
Cell[56186, 1196, 105, 1, 22, "Print"],
Cell[56294, 1199, 108, 1, 22, "Print"],
Cell[56405, 1202, 107, 1, 22, "Print"],
Cell[56515, 1205, 107, 1, 22, "Print"],
Cell[56625, 1208, 105, 1, 22, "Print"],
Cell[56733, 1211, 106, 1, 22, "Print"],
Cell[56842, 1214, 115, 1, 22, "Print"],
Cell[56960, 1217, 116, 1, 22, "Print"],
Cell[57079, 1220, 116, 1, 22, "Print"],
Cell[57198, 1223, 115, 1, 22, "Print"],
Cell[57316, 1226, 116, 1, 22, "Print"],
Cell[57435, 1229, 118, 1, 22, "Print"],
Cell[57556, 1232, 116, 1, 22, "Print"],
Cell[57675, 1235, 114, 1, 22, "Print"],
Cell[57792, 1238, 117, 1, 22, "Print"],
Cell[57912, 1241, 116, 1, 22, "Print"],
Cell[58031, 1244, 116, 1, 22, "Print"],
Cell[58150, 1247, 116, 1, 22, "Print"],
Cell[58269, 1250, 118, 1, 22, "Print"],
Cell[58390, 1253, 116, 1, 22, "Print"],
Cell[58509, 1256, 117, 1, 22, "Print"],
Cell[58629, 1259, 116, 1, 22, "Print"],
Cell[58748, 1262, 116, 1, 22, "Print"],
Cell[58867, 1265, 115, 1, 22, "Print"],
Cell[58985, 1268, 116, 1, 22, "Print"],
Cell[59104, 1271, 116, 1, 22, "Print"],
Cell[59223, 1274, 115, 1, 22, "Print"],
Cell[59341, 1277, 115, 1, 22, "Print"],
Cell[59459, 1280, 114, 1, 22, "Print"],
Cell[59576, 1283, 116, 1, 22, "Print"],
Cell[59695, 1286, 118, 1, 22, "Print"],
Cell[59816, 1289, 115, 1, 22, "Print"],
Cell[59934, 1292, 115, 1, 22, "Print"],
Cell[60052, 1295, 115, 1, 22, "Print"],
Cell[60170, 1298, 117, 1, 22, "Print"],
Cell[60290, 1301, 118, 1, 22, "Print"],
Cell[60411, 1304, 106, 1, 22, "Print"],
Cell[60520, 1307, 106, 1, 22, "Print"],
Cell[60629, 1310, 109, 1, 22, "Print"],
Cell[60741, 1313, 105, 1, 22, "Print"],
Cell[60849, 1316, 106, 1, 22, "Print"],
Cell[60958, 1319, 106, 1, 22, "Print"],
Cell[61067, 1322, 107, 1, 22, "Print"],
Cell[61177, 1325, 105, 1, 22, "Print"],
Cell[61285, 1328, 105, 1, 22, "Print"],
Cell[61393, 1331, 106, 1, 22, "Print"],
Cell[61502, 1334, 106, 1, 22, "Print"],
Cell[61611, 1337, 106, 1, 22, "Print"],
Cell[61720, 1340, 106, 1, 22, "Print"],
Cell[61829, 1343, 106, 1, 22, "Print"],
Cell[61938, 1346, 109, 1, 22, "Print"],
Cell[62050, 1349, 106, 1, 22, "Print"],
Cell[62159, 1352, 106, 1, 22, "Print"],
Cell[62268, 1355, 105, 1, 22, "Print"],
Cell[62376, 1358, 108, 1, 22, "Print"],
Cell[62487, 1361, 106, 1, 22, "Print"],
Cell[62596, 1364, 106, 1, 22, "Print"],
Cell[62705, 1367, 105, 1, 22, "Print"],
Cell[62813, 1370, 104, 1, 22, "Print"],
Cell[62920, 1373, 106, 1, 22, "Print"],
Cell[63029, 1376, 106, 1, 22, "Print"],
Cell[63138, 1379, 105, 1, 22, "Print"],
Cell[63246, 1382, 105, 1, 22, "Print"],
Cell[63354, 1385, 107, 1, 22, "Print"],
Cell[63464, 1388, 109, 1, 22, "Print"],
Cell[63576, 1391, 106, 1, 22, "Print"],
Cell[63685, 1394, 118, 1, 22, "Print"],
Cell[63806, 1397, 118, 1, 22, "Print"],
Cell[63927, 1400, 117, 1, 22, "Print"],
Cell[64047, 1403, 115, 1, 22, "Print"],
Cell[64165, 1406, 116, 1, 22, "Print"],
Cell[64284, 1409, 116, 1, 22, "Print"],
Cell[64403, 1412, 117, 1, 22, "Print"],
Cell[64523, 1415, 115, 1, 22, "Print"],
Cell[64641, 1418, 115, 1, 22, "Print"],
Cell[64759, 1421, 116, 1, 22, "Print"],
Cell[64878, 1424, 117, 1, 22, "Print"],
Cell[64998, 1427, 115, 1, 22, "Print"],
Cell[65116, 1430, 114, 1, 22, "Print"],
Cell[65233, 1433, 119, 1, 22, "Print"],
Cell[65355, 1436, 116, 1, 22, "Print"],
Cell[65474, 1439, 116, 1, 22, "Print"],
Cell[65593, 1442, 116, 1, 22, "Print"],
Cell[65712, 1445, 115, 1, 22, "Print"],
Cell[65830, 1448, 116, 1, 22, "Print"],
Cell[65949, 1451, 116, 1, 22, "Print"],
Cell[66068, 1454, 118, 1, 22, "Print"],
Cell[66189, 1457, 115, 1, 22, "Print"],
Cell[66307, 1460, 114, 1, 22, "Print"],
Cell[66424, 1463, 116, 1, 22, "Print"],
Cell[66543, 1466, 116, 1, 22, "Print"],
Cell[66662, 1469, 116, 1, 22, "Print"],
Cell[66781, 1472, 118, 1, 22, "Print"],
Cell[66902, 1475, 116, 1, 22, "Print"],
Cell[67021, 1478, 116, 1, 22, "Print"],
Cell[67140, 1481, 119, 1, 22, "Print"],
Cell[67262, 1484, 106, 1, 22, "Print"],
Cell[67371, 1487, 106, 1, 22, "Print"],
Cell[67480, 1490, 106, 1, 22, "Print"],
Cell[67589, 1493, 107, 1, 22, "Print"],
Cell[67699, 1496, 106, 1, 22, "Print"],
Cell[67808, 1499, 106, 1, 22, "Print"],
Cell[67917, 1502, 107, 1, 22, "Print"],
Cell[68027, 1505, 105, 1, 22, "Print"],
Cell[68135, 1508, 105, 1, 22, "Print"],
Cell[68243, 1511, 106, 1, 22, "Print"],
Cell[68352, 1514, 107, 1, 22, "Print"],
Cell[68462, 1517, 105, 1, 22, "Print"],
Cell[68570, 1520, 105, 1, 22, "Print"],
Cell[68678, 1523, 107, 1, 22, "Print"],
Cell[68788, 1526, 106, 1, 22, "Print"],
Cell[68897, 1529, 105, 1, 22, "Print"],
Cell[69005, 1532, 106, 1, 22, "Print"],
Cell[69114, 1535, 105, 1, 22, "Print"],
Cell[69222, 1538, 106, 1, 22, "Print"],
Cell[69331, 1541, 108, 1, 22, "Print"],
Cell[69442, 1544, 106, 1, 22, "Print"],
Cell[69551, 1547, 105, 1, 22, "Print"],
Cell[69659, 1550, 104, 1, 22, "Print"],
Cell[69766, 1553, 106, 1, 22, "Print"],
Cell[69875, 1556, 106, 1, 22, "Print"],
Cell[69984, 1559, 108, 1, 22, "Print"],
Cell[70095, 1562, 105, 1, 22, "Print"],
Cell[70203, 1565, 106, 1, 22, "Print"],
Cell[70312, 1568, 106, 1, 22, "Print"],
Cell[70421, 1571, 109, 1, 22, "Print"],
Cell[70533, 1574, 116, 1, 22, "Print"],
Cell[70652, 1577, 116, 1, 22, "Print"],
Cell[70771, 1580, 119, 1, 22, "Print"],
Cell[70893, 1583, 115, 1, 22, "Print"],
Cell[71011, 1586, 116, 1, 22, "Print"],
Cell[71130, 1589, 116, 1, 22, "Print"],
Cell[71249, 1592, 119, 1, 22, "Print"],
Cell[71371, 1595, 117, 1, 22, "Print"],
Cell[71491, 1598, 115, 1, 22, "Print"],
Cell[71609, 1601, 118, 1, 22, "Print"],
Cell[71730, 1604, 115, 1, 22, "Print"],
Cell[71848, 1607, 115, 1, 22, "Print"],
Cell[71966, 1610, 117, 1, 22, "Print"],
Cell[72086, 1613, 117, 1, 22, "Print"],
Cell[72206, 1616, 116, 1, 22, "Print"],
Cell[72325, 1619, 116, 1, 22, "Print"],
Cell[72444, 1622, 116, 1, 22, "Print"],
Cell[72563, 1625, 116, 1, 22, "Print"],
Cell[72682, 1628, 116, 1, 22, "Print"],
Cell[72801, 1631, 119, 1, 22, "Print"],
Cell[72923, 1634, 116, 1, 22, "Print"],
Cell[73042, 1637, 117, 1, 22, "Print"],
Cell[73162, 1640, 114, 1, 22, "Print"],
Cell[73279, 1643, 118, 1, 22, "Print"],
Cell[73400, 1646, 116, 1, 22, "Print"],
Cell[73519, 1649, 118, 1, 22, "Print"],
Cell[73640, 1652, 116, 1, 22, "Print"],
Cell[73759, 1655, 115, 1, 22, "Print"],
Cell[73877, 1658, 116, 1, 22, "Print"],
Cell[73996, 1661, 118, 1, 22, "Print"],
Cell[74117, 1664, 106, 1, 22, "Print"],
Cell[74226, 1667, 106, 1, 22, "Print"],
Cell[74335, 1670, 107, 1, 22, "Print"],
Cell[74445, 1673, 107, 1, 22, "Print"],
Cell[74555, 1676, 106, 1, 22, "Print"],
Cell[74664, 1679, 106, 1, 22, "Print"],
Cell[74773, 1682, 107, 1, 22, "Print"],
Cell[74883, 1685, 107, 1, 22, "Print"],
Cell[74993, 1688, 105, 1, 22, "Print"],
Cell[75101, 1691, 106, 1, 22, "Print"],
Cell[75210, 1694, 107, 1, 22, "Print"],
Cell[75320, 1697, 105, 1, 22, "Print"],
Cell[75428, 1700, 107, 1, 22, "Print"],
Cell[75538, 1703, 107, 1, 22, "Print"],
Cell[75648, 1706, 106, 1, 22, "Print"],
Cell[75757, 1709, 106, 1, 22, "Print"],
Cell[75866, 1712, 106, 1, 22, "Print"],
Cell[75975, 1715, 106, 1, 22, "Print"],
Cell[76084, 1718, 106, 1, 22, "Print"],
Cell[76193, 1721, 106, 1, 22, "Print"],
Cell[76302, 1724, 106, 1, 22, "Print"],
Cell[76411, 1727, 105, 1, 22, "Print"],
Cell[76519, 1730, 104, 1, 22, "Print"],
Cell[76626, 1733, 106, 1, 22, "Print"],
Cell[76735, 1736, 106, 1, 22, "Print"],
Cell[76844, 1739, 105, 1, 22, "Print"],
Cell[76952, 1742, 106, 1, 22, "Print"],
Cell[77061, 1745, 104, 1, 22, "Print"],
Cell[77168, 1748, 106, 1, 22, "Print"],
Cell[77277, 1751, 105, 1, 22, "Print"]
}, Open  ]],
Cell[77397, 1755, 390, 7, 80, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77824, 1767, 466, 8, 28, "Input"],
Cell[78293, 1777, 41205, 674, 2817, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
